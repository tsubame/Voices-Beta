import { Event } from '@skyway-sdk/common';
import { Transport, TransportConnectionState } from '../../../plugin/interface';
import { Codec } from '../..';
import { ContentType, Stream, WebRTCStats } from '..';
export declare abstract class RemoteStreamBase implements Stream {
    readonly id: string;
    readonly contentType: ContentType;
    readonly side = "remote";
    /**
     * @description [japanese] メディア通信の状態が変化した時に発火するイベント
     */
    readonly onConnectionStateChanged: Event<TransportConnectionState>;
    codec: Codec;
    /**@internal */
    constructor(id: string, contentType: ContentType);
    /**@internal */
    _getTransport: () => Transport | undefined;
    /**
     * @deprecated
     * @use Subscription.getStats
     */
    readonly getStats: () => Promise<WebRTCStats>;
    /**@internal */
    _getStats: () => Promise<WebRTCStats>;
    /**
     * @deprecated
     * @use Subscription.getRTCPeerConnection
     */
    getRTCPeerConnection(): RTCPeerConnection | undefined;
    /**@internal */
    _getRTCPeerConnection(): RTCPeerConnection | undefined;
    /**
     * @deprecated
     * @use Subscription.getConnectionState
     */
    getConnectionState(): TransportConnectionState;
    /**@internal */
    _getConnectionState(): TransportConnectionState;
    /**@internal */
    toJSON(): {
        contentType: ContentType;
        id: string;
        codec: Codec;
        side: string;
    };
}
//# sourceMappingURL=base.d.ts.map