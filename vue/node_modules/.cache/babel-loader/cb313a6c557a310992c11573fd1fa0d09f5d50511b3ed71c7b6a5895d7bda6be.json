{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_sheet = _resolveComponent(\"v-sheet\");\n  return _openBlock(), _createBlock(_component_v_sheet, {\n    color: \"grey-lighten-4\",\n    class: \"pa-4 text-center userProfileArea\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_img, {\n      src: $data.targetUserData.profileImageUrl,\n      class: \"profileIcon\",\n      onClick: $options.clearUserData\n    }, null, 8, [\"src\", \"onClick\"]), _createElementVNode(\"div\", null, _toDisplayString($data.targetUserData.name) + \" (ID: \" + _toDisplayString($data.targetUserData.id) + \")\", 1)]),\n    _: 1\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_sheet","color","class","_createVNode","_component_v_img","src","$data","targetUserData","profileImageUrl","onClick","$options","clearUserData","_createElementVNode","_toDisplayString","name","id"],"sources":["/Users/tsukamotohideki/go/src/github.com/tsubame/Voices/vue/src/components/App/AppLeftMenuUserArea.vue"],"sourcesContent":["<template>\n  <!-- 横メニューユーザエリア -->\n  <v-sheet\n    color=\"grey-lighten-4\"\n    class=\"pa-4 text-center userProfileArea\"  \n  >\n    <v-img :src=\"targetUserData.profileImageUrl\" class = \"profileIcon\" @click=\"clearUserData\" />   \n    <div>{{ targetUserData.name }} (ID: {{ targetUserData.id }})</div>\n  </v-sheet>\n</template>\n\n<!--\n//======================================================\n//\n// Script\n//\n//======================================================\n-->\n<script>\n\n//======================================================\n//\n// AppLeftMenu.vue App画面の左メニューアイテムのユーザエリア\n//  ・ユーザ情報をstoreから取得して描画\n// \n// [索引]\n//   □ 0. setup\n//    ・ユーザ情報をstoreから取得\n//\n//   □ 1. watch\n//   ・ユーザ情報の変更を監視\n//\n//   □ 2. methods\n//    ・ユーザ情報をクリア（デバッグ用）\n//\n//======================================================\n\n//import { CONSTANTS } from '../../consts/ConstantVals';\n\n/**\n * export\n */\nexport default {\n\n  // data\n  data() {\n    return {\n      targetUserData: {\n        id: 0,\n        idStr: \"\",\n        name: \"\",\n        profileImageUrl: \"\"\n      },\n    }\n  },\n  // computed\n  computed: {\n\n  },  \n\n  //======================================================\n  //\n  // 0. setup\n  //\n  //======================================================\n\n  /**\n   * setup\n   *  ・ユーザ情報をstoreから取得\n   */\n  mounted() {\n    try {      \n      // ユーザ情報をstoreから取得\n      this.targetUserData = this.$store.getters.getTargetUserData\n    } catch (error) {        \n      console.error(error);      \n    }\n  },\n\n  //======================================================\n  //\n  // 1. watch\n  //\n  //======================================================\n\n  /**\n   * watch\n   *  ・ユーザ情報の変更を監視\n   */\n  watch: {\n    '$store.getters.getTargetUserData': function (newValue) {\n      try {\n        //console.log(newValue)\n        //console.log(oldValue)\n        this.targetUserData = newValue\n      } catch (error) {        \n        console.error(error);      \n      }\n    },\n  },\n\n  //======================================================\n  //\n  // 2. methods\n  //\n  //======================================================  \n\n  /**\n   * methods\n   */\n   methods: {\n    /**\n     * ユーザ情報をクリア\n     */\n    clearUserData() {\n      try {      \n        this.$store.commit(\"clearUserData\")\n      } catch (error) {        \n        console.error(error);      \n      }\n    }\n  },  \n}\n</script>\n\n<!-- \n//======================================================\n//\n// CSS\n//\n//======================================================  \n-->\n<style>\n.profileIcon {\n  width: 100px;\n  height: 100px;  \n  margin: 0px 60px 12px;\n  border-radius: 50%;\n  border: solid 1px #999999;\n  background: rgb(0,0,0, 0.1);  \n}\n\n.userProfileArea {\n  text-align: center;\n}\n</style>\n\n"],"mappings":";;;;uBAEEA,YAAA,CAMUC,kBAAA;IALRC,KAAK,EAAC,gBAAgB;IACtBC,KAAK,EAAC;;sBAEN,MAA4F,CAA5FC,YAAA,CAA4FC,gBAAA;MAApFC,GAAG,EAAEC,KAAA,CAAAC,cAAc,CAACC,eAAe;MAAEN,KAAK,EAAG,aAAa;MAAEO,OAAK,EAAEC,QAAA,CAAAC;qCAC3EC,mBAAA,CAAkE,aAAAC,gBAAA,CAA1DP,KAAA,CAAAC,cAAc,CAACO,IAAI,IAAG,QAAM,GAAAD,gBAAA,CAAGP,KAAA,CAAAC,cAAc,CAACQ,EAAE,IAAG,GAAC,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}