{"ast":null,"code":"//======================================================\n//\n// AppLeftMenu.vue App画面の左メニューアイテムのユーザエリア\n//  ・ユーザ情報をstoreから取得して描画\n// \n// [索引]\n//   □ 0. setup\n//    ・ユーザ情報をstoreから取得\n//\n//   □ 1. watch\n//   ・ユーザ情報の変更を監視\n//\n//   □ 2. methods\n//    ・ユーザ情報をクリア（デバッグ用）\n//\n//======================================================\n\n//import { CONSTANTS } from '../../consts/ConstantVals';\n\n/**\n * export\n */\nexport default {\n  // data\n  data() {\n    return {\n      targetUserData: {\n        id: 0,\n        idStr: \"\",\n        name: \"\",\n        profileImageUrl: \"\"\n      }\n    };\n  },\n  // computed\n  computed: {},\n  //======================================================\n  //\n  // 0. setup\n  //\n  //======================================================\n\n  /**\n   * setup\n   *  ・ユーザ情報をstoreから取得\n   */\n  mounted() {\n    try {\n      // ユーザ情報をstoreから取得\n      this.targetUserData = this.$store.getters.getTargetUserData;\n    } catch (error) {\n      console.error(error);\n    }\n  },\n  //======================================================\n  //\n  // 1. watch\n  //\n  //======================================================\n\n  /**\n   * watch\n   *  ・ユーザ情報の変更を監視\n   */\n  watch: {\n    '$store.getters.getTargetUserData': function (newValue) {\n      try {\n        //console.log(newValue)\n        //console.log(oldValue)\n        this.targetUserData = newValue;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n  //======================================================\n  //\n  // 2. methods\n  //\n  //======================================================  \n\n  /**\n   * methods\n   */\n  methods: {\n    /**\n     * ユーザ情報をクリア\n     */\n    clearUserData() {\n      try {\n        this.$store.commit(\"clearUserData\");\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","targetUserData","id","idStr","name","profileImageUrl","computed","mounted","$store","getters","getTargetUserData","error","console","watch","$store.getters.getTargetUserData","newValue","methods","clearUserData","commit"],"sources":["/Users/tsukamotohideki/go/src/github.com/tsubame/Voices/vue/src/components/App/AppLeftMenuUserArea.vue"],"sourcesContent":["<template>\n  <!-- 横メニューユーザエリア -->\n  <v-sheet\n    color=\"grey-lighten-4\"\n    class=\"pa-4 text-center userProfileArea\"  \n  >\n    <v-img :src=\"targetUserData.profileImageUrl\" class = \"profileIcon\" @click=\"clearUserData\" />   \n    <div>{{ targetUserData.name }} (ID: {{ targetUserData.id }})</div>\n  </v-sheet>\n</template>\n\n<!--\n//======================================================\n//\n// Script\n//\n//======================================================\n-->\n<script>\n\n//======================================================\n//\n// AppLeftMenu.vue App画面の左メニューアイテムのユーザエリア\n//  ・ユーザ情報をstoreから取得して描画\n// \n// [索引]\n//   □ 0. setup\n//    ・ユーザ情報をstoreから取得\n//\n//   □ 1. watch\n//   ・ユーザ情報の変更を監視\n//\n//   □ 2. methods\n//    ・ユーザ情報をクリア（デバッグ用）\n//\n//======================================================\n\n//import { CONSTANTS } from '../../consts/ConstantVals';\n\n/**\n * export\n */\nexport default {\n\n  // data\n  data() {\n    return {\n      targetUserData: {\n        id: 0,\n        idStr: \"\",\n        name: \"\",\n        profileImageUrl: \"\"\n      },\n    }\n  },\n  // computed\n  computed: {\n\n  },  \n\n  //======================================================\n  //\n  // 0. setup\n  //\n  //======================================================\n\n  /**\n   * setup\n   *  ・ユーザ情報をstoreから取得\n   */\n  mounted() {\n    try {      \n      // ユーザ情報をstoreから取得\n      this.targetUserData = this.$store.getters.getTargetUserData\n    } catch (error) {        \n      console.error(error);      \n    }\n  },\n\n  //======================================================\n  //\n  // 1. watch\n  //\n  //======================================================\n\n  /**\n   * watch\n   *  ・ユーザ情報の変更を監視\n   */\n  watch: {\n    '$store.getters.getTargetUserData': function (newValue) {\n      try {\n        //console.log(newValue)\n        //console.log(oldValue)\n        this.targetUserData = newValue\n      } catch (error) {        \n        console.error(error);      \n      }\n    },\n  },\n\n  //======================================================\n  //\n  // 2. methods\n  //\n  //======================================================  \n\n  /**\n   * methods\n   */\n   methods: {\n    /**\n     * ユーザ情報をクリア\n     */\n    clearUserData() {\n      try {      \n        this.$store.commit(\"clearUserData\")\n      } catch (error) {        \n        console.error(error);      \n      }\n    }\n  },  \n}\n</script>\n\n<!-- \n//======================================================\n//\n// CSS\n//\n//======================================================  \n-->\n<style>\n.profileIcon {\n  width: 100px;\n  height: 100px;  \n  margin: 0px 60px 12px;\n  border-radius: 50%;\n  border: solid 1px #999999;\n  background: rgb(0,0,0, 0.1);  \n}\n\n.userProfileArea {\n  text-align: center;\n}\n</style>\n\n"],"mappings":"AAoBA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA,eAAe;EAEb;EACAA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE;QACdC,EAAE,EAAE,CAAC;QACLC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,eAAe,EAAE;MACnB;IACF;EACF,CAAC;EACD;EACAC,QAAQ,EAAE,CAEV,CAAC;EAED;EACA;EACA;EACA;EACA;;EAEA;;;;EAIAC,OAAOA,CAAA,EAAG;IACR,IAAI;MACF;MACA,IAAI,CAACN,cAAa,GAAI,IAAI,CAACO,MAAM,CAACC,OAAO,CAACC,iBAAgB;IAC5D,EAAE,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED;EACA;EACA;EACA;EACA;;EAEA;;;;EAIAE,KAAK,EAAE;IACL,kCAAkC,EAAE,SAAAC,CAAUC,QAAQ,EAAE;MACtD,IAAI;QACF;QACA;QACA,IAAI,CAACd,cAAa,GAAIc,QAAO;MAC/B,EAAE,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF,CAAC;EAED;EACA;EACA;EACA;EACA;;EAEA;;;EAGCK,OAAO,EAAE;IACR;;;IAGAC,aAAaA,CAAA,EAAG;MACd,IAAI;QACF,IAAI,CAACT,MAAM,CAACU,MAAM,CAAC,eAAe;MACpC,EAAE,OAAOP,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}