{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//======================================================\n//\n// RoomIndex.vue 配信一覧画面\n//  ・配信一覧をDBから取得して描画\n// \n// [索引]\n//   □ 0. setup\n//\n//   □ 1. watch\n//\n//   □ 2. methods\n//\n//======================================================\n\n// 定数\n//import { CONSTANTS } from '../../consts/ConstantVals';\n// SearchBar\nimport SearchBar from '@/components/SearchBar.vue';\n// Footerメニュー\nimport AppFooterMenu from '@/components/App/AppFooterMenu.vue';\n// Go API操作用\nimport { getActiveRoomDatas } from '../../utils/GoAPIManager';\n\n/**\n * \n */\nexport default {\n  // コンポーネント \n  components: {\n    SearchBar,\n    AppFooterMenu\n  },\n  // data\n  data: () => ({\n    // 部屋データ\n    room: {\n      id: 0,\n      title: \"\",\n      category: \"\",\n      thumImageUrl: \"\",\n      bgImageUrl: \"\",\n      bgmUrl: \"\",\n      isActive: false,\n      startedAt: null\n    },\n    // 部屋データ（サンプル用）\n    rooms: [],\n    files: [{\n      color: 'blue',\n      icon: 'mdi-clipboard-text',\n      subtitle: 'Jan 20, 2014',\n      title: 'Vacation itinerary'\n    }, {\n      color: 'amber',\n      icon: 'mdi-gesture-tap-button',\n      subtitle: 'Jan 10, 2014',\n      title: 'Kitchen remodel'\n    }],\n    folders: [{\n      subtitle: 'Jan 9, 2014',\n      title: 'Photos'\n    }, {\n      subtitle: 'Jan 17, 2014',\n      title: 'Recipes'\n    }, {\n      subtitle: 'Jan 28, 2014',\n      title: 'Work'\n    }]\n  }),\n  //======================================================\n  //\n  // 0. mounted\n  //\n  //======================================================\n\n  mounted() {\n    try {\n      this.setAllRooms();\n    } catch (error) {\n      console.error(error);\n    }\n  },\n  //======================================================\n  //\n  // 2. methods\n  //\n  //======================================================\n\n  methods: {\n    //======================================================\n    //\n    // 2-1. 部屋データの一覧をセット\n    // \n    //======================================================\n\n    /**\n     * 部屋データの一覧をセット\n     */\n    async setAllRooms() {\n      try {\n        this.rooms = await getActiveRoomDatas();\n        console.log(this.rooms.length + \"件のデータを取得\");\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    //======================================================\n    //\n    // 2-2. 部屋アイテムクリック\n    // \n    //======================================================\n\n    /**\n     * 部屋アイテムクリック\n     *  ・個別の部屋に移動\n     */\n    goToDetail(roomId) {\n      try {\n        let url = '/rooms/' + roomId;\n        console.log(url);\n        // 個別の部屋に遷移\n        this.$router.push(url);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["SearchBar","AppFooterMenu","getActiveRoomDatas","components","data","room","id","title","category","thumImageUrl","bgImageUrl","bgmUrl","isActive","startedAt","rooms","files","color","icon","subtitle","folders","mounted","setAllRooms","error","console","methods","log","length","goToDetail","roomId","url","$router","push"],"sources":["/Users/tsukamotohideki/go/src/github.com/tsubame/Voices/vue/src/views/rooms/RoomIndexView.vue"],"sourcesContent":["<template>\n  <v-main>\n    <v-container class=\"py-8 px-6\" fluid>     \n      <!-- 検索バー -->   \n      <SearchBar />\n      <!-- 部屋作成ボタン -->\n      <v-row class=\"text-right\">   \n        <v-col>\n          <v-btn @click=\"$router.push('/rooms_edit_form')\"><v-icon>mdi-cast</v-icon>&nbsp;部屋を作る</v-btn>\n        </v-col> \n      </v-row>\n\n      <!-- 配信一覧 -->\n      <v-row justify=\"center\">   \n        <v-col cols=\"10\">      \n          <v-card>\n            <v-list lines=\"two\">      \n              <v-list-subheader inset>声劇（{{ rooms.length }}件）</v-list-subheader>            \n              <!-- リスト -->\n              <template v-for=\"(room, i) in rooms\" :key=\"room.title\" >\n                <v-list-item @click=\"goToDetail(room.id)\">\n                  <!-- アイコン -->\n                  <template v-slot:prepend>\n                    <v-img class=\"roomIcon\" :value=\"room.title\" \n                      :src=\"room.thumImageUrl\" \n                    />                         \n                  </template>\n                  <v-list-item-title>{{ room.title }}</v-list-item-title>\n                  <v-list-item-subtitle>{{ room.category }}</v-list-item-subtitle>\n                  <template v-slot:append>\n                    <v-badge color=\"pink\" :content=\"room.webRtcService\" v-if=\"room.webRtcService === 'agora'\" inline></v-badge>     \n                    <v-badge color=\"blue\" :content=\"room.webRtcService\" v-if=\"room.webRtcService === 'skyway'\" inline></v-badge>                        \n                    <v-icon color = \"success\">mdi-account</v-icon>0\n                  </template>          \n                </v-list-item>\n\n                <!-- 区切り線 -->\n                <v-divider v-if=\"i !== rooms.length - 1\" :key=\"`divider-`\" inset></v-divider>\n              </template>\n            </v-list>          \n          </v-card>\n        </v-col>\n      </v-row>    \n\n      <!-- フッターメニュー -->\n      <AppFooterMenu :showFooterMenu=\"true\" />\n    </v-container>      \n  </v-main>\n</template>\n\n<!--\n//======================================================\n//\n// Script\n//\n//======================================================\n-->\n<script>\n\n//======================================================\n//\n// RoomIndex.vue 配信一覧画面\n//  ・配信一覧をDBから取得して描画\n// \n// [索引]\n//   □ 0. setup\n//\n//   □ 1. watch\n//\n//   □ 2. methods\n//\n//======================================================\n\n// 定数\n//import { CONSTANTS } from '../../consts/ConstantVals';\n// SearchBar\nimport SearchBar from '@/components/SearchBar.vue';\n// Footerメニュー\nimport AppFooterMenu from '@/components/App/AppFooterMenu.vue';\n// Go API操作用\nimport { getActiveRoomDatas } from '../../utils/GoAPIManager'\n\n/**\n * \n */\nexport default {\n\n  // コンポーネント \n  components: {\n    SearchBar,\n    AppFooterMenu,\n  },\n\n  // data\n  data: () => ({\n    // 部屋データ\n    room: {\n      id: 0,\n      title: \"\",\n      category: \"\",\n      thumImageUrl: \"\",\n      bgImageUrl: \"\",\n      bgmUrl: \"\",\n      isActive: false,\n      startedAt: null\n    },\n    // 部屋データ（サンプル用）\n    rooms: [\n    ],\n    files: [\n      {\n        color: 'blue',\n        icon: 'mdi-clipboard-text',\n        subtitle: 'Jan 20, 2014',\n        title: 'Vacation itinerary',\n      },\n      {\n        color: 'amber',\n        icon: 'mdi-gesture-tap-button',\n        subtitle: 'Jan 10, 2014',\n        title: 'Kitchen remodel',\n      },\n    ],\n    folders: [\n      {\n        subtitle: 'Jan 9, 2014',\n        title: 'Photos',\n      },\n      {\n        subtitle: 'Jan 17, 2014',\n        title: 'Recipes',\n      },\n      {\n        subtitle: 'Jan 28, 2014',\n        title: 'Work',\n      },\n    ],  \n  }),\n\n  //======================================================\n  //\n  // 0. mounted\n  //\n  //======================================================\n\n  mounted() {\n    try {      \n      this.setAllRooms() \n    } catch (error) {        \n      console.error(error);      \n    }\n  },\n\n  //======================================================\n  //\n  // 2. methods\n  //\n  //======================================================\n\n  methods: {\n\n    //======================================================\n    //\n    // 2-1. 部屋データの一覧をセット\n    // \n    //======================================================\n\n    /**\n     * 部屋データの一覧をセット\n     */\n    async setAllRooms() {\n      try {      \n        this.rooms = await getActiveRoomDatas()\n\n        console.log(this.rooms.length + \"件のデータを取得\")        \n      } catch (error) {        \n        console.error(error);      \n      }\n    },\n\n    //======================================================\n    //\n    // 2-2. 部屋アイテムクリック\n    // \n    //======================================================\n\n    /**\n     * 部屋アイテムクリック\n     *  ・個別の部屋に移動\n     */\n    goToDetail(roomId) {\n      try {      \n        let url = '/rooms/' + roomId\n\n        console.log(url)\n        // 個別の部屋に遷移\n        this.$router.push(url)    \n      } catch (error) {        \n        console.error(error);      \n      }\n    }\n  }      \n}\n</script>\n\n<style scoped>\n\n.roomIcon {\n  width: 50px;\n  margin: 0px 20px 0px 8px;\n}\n\n</style>"],"mappings":";AA2DA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,OAAOA,SAAQ,MAAO,4BAA4B;AAClD;AACA,OAAOC,aAAY,MAAO,oCAAoC;AAC9D;AACA,SAASC,kBAAiB,QAAS,0BAAyB;;AAE5D;;;AAGA,eAAe;EAEb;EACAC,UAAU,EAAE;IACVH,SAAS;IACTC;EACF,CAAC;EAED;EACAG,IAAI,EAAEA,CAAA,MAAO;IACX;IACAC,IAAI,EAAE;MACJC,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE,EAAE;MACdC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,KAAK;MACfC,SAAS,EAAE;IACb,CAAC;IACD;IACAC,KAAK,EAAE,EACN;IACDC,KAAK,EAAE,CACL;MACEC,KAAK,EAAE,MAAM;MACbC,IAAI,EAAE,oBAAoB;MAC1BC,QAAQ,EAAE,cAAc;MACxBX,KAAK,EAAE;IACT,CAAC,EACD;MACES,KAAK,EAAE,OAAO;MACdC,IAAI,EAAE,wBAAwB;MAC9BC,QAAQ,EAAE,cAAc;MACxBX,KAAK,EAAE;IACT,CAAC,CACF;IACDY,OAAO,EAAE,CACP;MACED,QAAQ,EAAE,aAAa;MACvBX,KAAK,EAAE;IACT,CAAC,EACD;MACEW,QAAQ,EAAE,cAAc;MACxBX,KAAK,EAAE;IACT,CAAC,EACD;MACEW,QAAQ,EAAE,cAAc;MACxBX,KAAK,EAAE;IACT,CAAC;EAEL,CAAC,CAAC;EAEF;EACA;EACA;EACA;EACA;;EAEAa,OAAOA,CAAA,EAAG;IACR,IAAI;MACF,IAAI,CAACC,WAAW,EAAC;IACnB,EAAE,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED;EACA;EACA;EACA;EACA;;EAEAE,OAAO,EAAE;IAEP;IACA;IACA;IACA;IACA;;IAEA;;;IAGA,MAAMH,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,IAAI,CAACP,KAAI,GAAI,MAAMZ,kBAAkB,EAAC;QAEtCqB,OAAO,CAACE,GAAG,CAAC,IAAI,CAACX,KAAK,CAACY,MAAK,GAAI,UAAU;MAC5C,EAAE,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAED;IACA;IACA;IACA;IACA;;IAEA;;;;IAIAK,UAAUA,CAACC,MAAM,EAAE;MACjB,IAAI;QACF,IAAIC,GAAE,GAAI,SAAQ,GAAID,MAAK;QAE3BL,OAAO,CAACE,GAAG,CAACI,GAAG;QACf;QACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAACF,GAAG;MACvB,EAAE,OAAOP,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}