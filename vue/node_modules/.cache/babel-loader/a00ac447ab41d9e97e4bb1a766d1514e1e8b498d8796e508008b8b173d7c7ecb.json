{"ast":null,"code":"//======================================================\n//\n// RoomBGImageSelectDialog.vue 背景画像選択用ダイアログ\n// \n// [索引]\n//   □ 0. setup\n//\n//   □ 1. watch\n//\n//   □ 2. methods\n//      ・OKボタンクリック\n//\n//======================================================\n\n//import { CONSTANTS } from \"../../consts/ConstantVals.js\"\n\n/**\n * エクスポート\n */\nexport default {\n  // props\n  props: ['selectedImageTitle'],\n  // data\n  data() {\n    return {\n      returnData: {\n        selectedImageTitle: this.selectedImageTitle,\n        selectedImageUrl: this.selectedImageUrl\n      },\n      // 画像選択肢の候補\n      imageFiles: this.$store.getBgImages,\n      // アクティブなインデックス\n      activeIndex: 0\n    };\n  },\n  //======================================================\n  //\n  // 1. setup\n  //\n  //======================================================\n\n  /**\n   * setup\n   */\n  mounted() {\n    try {\n      this.imageFiles = this.$store.getters.getBgImages;\n    } catch (error) {\n      console.error(error);\n    }\n  },\n  //======================================================\n  //\n  // 2. methods\n  //\n  //======================================================\n\n  methods: {\n    //======================================================\n    //\n    // 2-1. リストのアイテムクリック\n    //\n    //======================================================\n\n    /**\n     * リストのアイテムクリック\n     */\n    onListItemClick(item, i) {\n      try {\n        // 選択されたファイル名をセット\n        this.returnData.selectedImageUrl = item.filePath;\n        this.returnData.selectedImageTitle = item.title;\n        // アクティブなインデックスをセット\n        this.activeIndex = i;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    //======================================================\n    //\n    // 2-2. OKボタンクリック\n    //\n    //======================================================\n\n    /**\n     * OKボタンクリック\n     *   ・ダイアログを閉じる\n     *   ・storeに選択したBGMをセット\n     */\n    onOKButtonClick() {\n      try {\n        // 選択されたファイル名をセット\n        let item = this.imageFiles[this.activeIndex];\n        this.returnData.selectedImageUrl = item.filePath;\n        this.returnData.selectedImageTitle = item.title;\n        this.$emit('clickSubmit', this.returnData);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["props","data","returnData","selectedImageTitle","selectedImageUrl","imageFiles","$store","getBgImages","activeIndex","mounted","getters","error","console","methods","onListItemClick","item","i","filePath","title","onOKButtonClick","$emit"],"sources":["/Users/tsukamotohideki/go/src/github.com/tsubame/Voices/vue/src/components/Room/RoomBGImageSelectDialog.vue"],"sourcesContent":["<template>\n  <!-- 背景画像選択ダイアログ -->\n  <v-card>\n    <v-card-title>\n      <h4>背景画像の選択</h4>      \n    </v-card-title>\n    <v-card-text>\n      <v-container>     \n        <small>以下から背景画像を選択し、OKを押して下さい。</small> \n        <v-row>\n          <v-col cols=\"4\" v-for=\"(item, i) in imageFiles\" :key=\"i\">\n            <v-img class=\"bgImageItem\" :value=\"item.title\" \n              :src=\"item.filePath\" @click=\"onListItemClick(item, i)\" \n              :class=\"{ 'active': activeIndex === i }\"\n            />            \n          </v-col>\n        </v-row>\n      </v-container>\n    </v-card-text>\n    <v-card-actions>\n      <v-spacer></v-spacer>\n      <v-btn id = \"okButton\" variant=\"elevated\" color=\"success\" @click=\"onOKButtonClick\">\n        OK\n      </v-btn>\n      <v-spacer></v-spacer>      \n    </v-card-actions>\n  </v-card>        \n</template>\n\n<!--\n//======================================================\n//\n// Script\n//\n//======================================================  \n-->\n<script>\n\n//======================================================\n//\n// RoomBGImageSelectDialog.vue 背景画像選択用ダイアログ\n// \n// [索引]\n//   □ 0. setup\n//\n//   □ 1. watch\n//\n//   □ 2. methods\n//      ・OKボタンクリック\n//\n//======================================================\n\n//import { CONSTANTS } from \"../../consts/ConstantVals.js\"\n\n/**\n * エクスポート\n */\nexport default {\n  // props\n  props: [\n    'selectedImageTitle',\n  ],\n\n  // data\n  data() {\n    return {\n      returnData: {\n        selectedImageTitle: this.selectedImageTitle,\n        selectedImageUrl: this.selectedImageUrl,\n      },\n      // 画像選択肢の候補\n      imageFiles: this.$store.getBgImages,\n      // アクティブなインデックス\n      activeIndex: 0,\n    }\n  },\n\n\n  //======================================================\n  //\n  // 1. setup\n  //\n  //======================================================\n\n  /**\n   * setup\n   */\n  mounted() {\n    try {      \n      this.imageFiles = this.$store.getters.getBgImages\n    } catch (error) {        \n      console.error(error);      \n    }\n  },\n\n  //======================================================\n  //\n  // 2. methods\n  //\n  //======================================================\n  \n  methods: {    \n\n    //======================================================\n    //\n    // 2-1. リストのアイテムクリック\n    //\n    //======================================================\n\n    /**\n     * リストのアイテムクリック\n     */\n    onListItemClick(item, i) {\n      try {      \n        // 選択されたファイル名をセット\n        this.returnData.selectedImageUrl = item.filePath \n        this.returnData.selectedImageTitle = item.title\n        // アクティブなインデックスをセット\n        this.activeIndex = i\n      } catch (error) {        \n        console.error(error);      \n      }\n    },\n    \n    //======================================================\n    //\n    // 2-2. OKボタンクリック\n    //\n    //======================================================\n\n    /**\n     * OKボタンクリック\n     *   ・ダイアログを閉じる\n     *   ・storeに選択したBGMをセット\n     */\n    onOKButtonClick() {    \n      try {      \n        // 選択されたファイル名をセット\n        let item = this.imageFiles[this.activeIndex]\n        this.returnData.selectedImageUrl = item.filePath\n        this.returnData.selectedImageTitle = item.title\n\n        this.$emit('clickSubmit', this.returnData)\n      } catch (error) {        \n        console.error(error);      \n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n.bgImageItem {\n  width: 200px;\n  padding: 20px;\n}\n.active {\n  background: rgb(0,0,0, 0.3);\n}\n\n#okButton {\n  width: 100px;\n  margin: 0 0 40px;\n}\n</style>"],"mappings":"AAsCA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA,eAAe;EACb;EACAA,KAAK,EAAE,CACL,oBAAoB,CACrB;EAED;EACAC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE;QACVC,kBAAkB,EAAE,IAAI,CAACA,kBAAkB;QAC3CC,gBAAgB,EAAE,IAAI,CAACA;MACzB,CAAC;MACD;MACAC,UAAU,EAAE,IAAI,CAACC,MAAM,CAACC,WAAW;MACnC;MACAC,WAAW,EAAE;IACf;EACF,CAAC;EAGD;EACA;EACA;EACA;EACA;;EAEA;;;EAGAC,OAAOA,CAAA,EAAG;IACR,IAAI;MACF,IAAI,CAACJ,UAAS,GAAI,IAAI,CAACC,MAAM,CAACI,OAAO,CAACH,WAAU;IAClD,EAAE,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED;EACA;EACA;EACA;EACA;;EAEAE,OAAO,EAAE;IAEP;IACA;IACA;IACA;IACA;;IAEA;;;IAGAC,eAAeA,CAACC,IAAI,EAAEC,CAAC,EAAE;MACvB,IAAI;QACF;QACA,IAAI,CAACd,UAAU,CAACE,gBAAe,GAAIW,IAAI,CAACE,QAAO;QAC/C,IAAI,CAACf,UAAU,CAACC,kBAAiB,GAAIY,IAAI,CAACG,KAAI;QAC9C;QACA,IAAI,CAACV,WAAU,GAAIQ,CAAA;MACrB,EAAE,OAAOL,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAED;IACA;IACA;IACA;IACA;;IAEA;;;;;IAKAQ,eAAeA,CAAA,EAAG;MAChB,IAAI;QACF;QACA,IAAIJ,IAAG,GAAI,IAAI,CAACV,UAAU,CAAC,IAAI,CAACG,WAAW;QAC3C,IAAI,CAACN,UAAU,CAACE,gBAAe,GAAIW,IAAI,CAACE,QAAO;QAC/C,IAAI,CAACf,UAAU,CAACC,kBAAiB,GAAIY,IAAI,CAACG,KAAI;QAE9C,IAAI,CAACE,KAAK,CAAC,aAAa,EAAE,IAAI,CAAClB,UAAU;MAC3C,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}