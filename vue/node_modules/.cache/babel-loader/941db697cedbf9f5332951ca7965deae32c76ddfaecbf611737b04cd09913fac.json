{"ast":null,"code":"//======================================================\n//\n// RoomBGMSelectDialog.vue BGM選択用ダイアログ\n// \n// [索引]\n//   □ 0. setup\n//\n//   □ 1. watch\n//\n//   □ 2. methods\n//      ・OKボタンクリック\n//\n//======================================================\n\nimport { CONSTANTS } from \"../../consts/ConstantVals.js\";\n/**\n * エクスポート\n */\nexport default {\n  // props\n  props: ['selectedBgmTitle', 'selectedBgmUrl'],\n  // data\n  data() {\n    return {\n      returnData: {\n        selectedBgmTitle: this.selectedBgmTitle,\n        selectedBgmUrl: this.selectedBgmUrl\n      },\n      // BGM選択肢の候補\n      bgmFiles: this.$store.getters.getBgms\n    };\n  },\n  //======================================================\n  //\n  // 1. watch\n  //\n  //======================================================\n\n  /**\n   * watch\n   */\n  watch: {},\n  //======================================================\n  //\n  // 2. methods\n  //\n  //======================================================\n\n  methods: {\n    //======================================================\n    //\n    // 2-1. リストのアイテムクリック\n    //\n    //======================================================\n\n    /**\n     * リストのアイテムクリック\n     *   ・音楽再生\n     *   ・再生されたファイル名をセット\n     */\n    onListItemClick(item) {\n      try {\n        // ファイルパスをセット\n        this.returnData.selectedBgmUrl = item.filePath;\n        this.returnData.selectedBgmTitle = item.title;\n        console.log(this.returnData.selectedBgmUrl);\n\n        // 再生\n        this.$nextTick(function () {\n          this.$refs.audioElement.pause();\n          this.$refs.audioElement.play();\n          this.$refs.audioElement.volume = CONSTANTS.BGM_DEFAULT_VOLUME;\n          this.$refs.audioElement.loop = true;\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    //======================================================\n    //\n    // 2-2. OKボタンクリック\n    //\n    //======================================================\n\n    /**\n     * OKボタンクリック\n     *   ・ダイアログを閉じる\n     *   ・storeに選択したBGMをセット\n     */\n    onOKButtonClick() {\n      try {\n        this.$emit('clickSubmit', this.returnData);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["CONSTANTS","props","data","returnData","selectedBgmTitle","selectedBgmUrl","bgmFiles","$store","getters","getBgms","watch","methods","onListItemClick","item","filePath","title","console","log","$nextTick","$refs","audioElement","pause","play","volume","BGM_DEFAULT_VOLUME","loop","error","onOKButtonClick","$emit"],"sources":["/Users/tsukamotohideki/go/src/github.com/tsubame/Voices/vue/src/components/Room/RoomBGMSelectDialog.vue"],"sourcesContent":["<template>\n  <!-- BGM選択ダイアログ -->\n  <v-card>\n    <v-card-title>\n      <h4>BGMの選択</h4>      \n    </v-card-title>\n    <v-card-text>\n      <v-container>     \n        <small>以下からBGMを選択し、OKを押して下さい。</small> \n        <v-list>\n          <!--<v-list-item v-for=\"item in bgmFiles\" :key=\"item.title\" @click=\"handleItemClick(item)\">-->\n          <v-list-subheader>BGM一覧</v-list-subheader>\n\n          <v-list-item\n            v-for=\"(item, i) in bgmFiles\"\n            :key=\"i\"\n            :value=\"item.title\"\n            @click=\"onListItemClick(item)\"                \n          >\n            <template v-slot:prepend>\n              <v-icon>mdi-music</v-icon>\n            </template>\n\n            <v-list-item-title v-text=\"item.title\"></v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-container>\n    </v-card-text>\n    <v-card-actions>\n      <v-spacer></v-spacer>\n      <v-btn id = \"okButton\" variant=\"elevated\" color=\"success\" @click=\"onOKButtonClick\">\n        OK\n      </v-btn>\n      <v-spacer></v-spacer>      \n    </v-card-actions>\n\n    <!-- BGM再生用 -->\n    <audio ref=\"audioElement\" :src=\"returnData.selectedBgmUrl\" @canplay=\"play\"></audio>       \n  </v-card>        \n</template>\n\n<!--\n//======================================================\n//\n// Script\n//\n//======================================================  \n-->\n<script>\n\n//======================================================\n//\n// RoomBGMSelectDialog.vue BGM選択用ダイアログ\n// \n// [索引]\n//   □ 0. setup\n//\n//   □ 1. watch\n//\n//   □ 2. methods\n//      ・OKボタンクリック\n//\n//======================================================\n\nimport { CONSTANTS } from \"../../consts/ConstantVals.js\"\n/**\n * エクスポート\n */\nexport default {\n  // props\n  props: [\n    'selectedBgmTitle',\n    'selectedBgmUrl',\n  ],\n\n  // data\n  data() {\n    return {\n      returnData: {\n        selectedBgmTitle: this.selectedBgmTitle,\n        selectedBgmUrl: this.selectedBgmUrl,\n      },\n      // BGM選択肢の候補\n      bgmFiles: this.$store.getters.getBgms \n    }\n  },\n\n  //======================================================\n  //\n  // 1. watch\n  //\n  //======================================================\n\n  /**\n   * watch\n   */\n   watch: {\n\n  },\n\n  //======================================================\n  //\n  // 2. methods\n  //\n  //======================================================\n  \n  methods: {    \n\n    //======================================================\n    //\n    // 2-1. リストのアイテムクリック\n    //\n    //======================================================\n\n    /**\n     * リストのアイテムクリック\n     *   ・音楽再生\n     *   ・再生されたファイル名をセット\n     */\n    onListItemClick(item) {\n      try {      \n        // ファイルパスをセット\n        this.returnData.selectedBgmUrl =  item.filePath\n        this.returnData.selectedBgmTitle = item.title\n        console.log(this.returnData.selectedBgmUrl)\n\n        // 再生\n        this.$nextTick(function() {        \n          this.$refs.audioElement.pause();        \n          this.$refs.audioElement.play();\n          this.$refs.audioElement.volume = CONSTANTS.BGM_DEFAULT_VOLUME;   \n          this.$refs.audioElement.loop = true        \n        })\n      } catch (error) {        \n        console.error(error);      \n      }\n    },\n    \n    //======================================================\n    //\n    // 2-2. OKボタンクリック\n    //\n    //======================================================\n\n    /**\n     * OKボタンクリック\n     *   ・ダイアログを閉じる\n     *   ・storeに選択したBGMをセット\n     */\n    onOKButtonClick() {    \n      try {      \n        this.$emit('clickSubmit', this.returnData)\n      } catch (error) {        \n        console.error(error);      \n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n#okButton {\n  width: 100px;\n  margin: 0 0 40px;\n}\n</style>"],"mappings":"AAkDA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,SAASA,SAAQ,QAAS,8BAA6B;AACvD;;;AAGA,eAAe;EACb;EACAC,KAAK,EAAE,CACL,kBAAkB,EAClB,gBAAgB,CACjB;EAED;EACAC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE;QACVC,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;QACvCC,cAAc,EAAE,IAAI,CAACA;MACvB,CAAC;MACD;MACAC,QAAQ,EAAE,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC;IAChC;EACF,CAAC;EAED;EACA;EACA;EACA;EACA;;EAEA;;;EAGCC,KAAK,EAAE,CAER,CAAC;EAED;EACA;EACA;EACA;EACA;;EAEAC,OAAO,EAAE;IAEP;IACA;IACA;IACA;IACA;;IAEA;;;;;IAKAC,eAAeA,CAACC,IAAI,EAAE;MACpB,IAAI;QACF;QACA,IAAI,CAACV,UAAU,CAACE,cAAa,GAAKQ,IAAI,CAACC,QAAO;QAC9C,IAAI,CAACX,UAAU,CAACC,gBAAe,GAAIS,IAAI,CAACE,KAAI;QAC5CC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,UAAU,CAACE,cAAc;;QAE1C;QACA,IAAI,CAACa,SAAS,CAAC,YAAW;UACxB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,KAAK,EAAE;UAC/B,IAAI,CAACF,KAAK,CAACC,YAAY,CAACE,IAAI,EAAE;UAC9B,IAAI,CAACH,KAAK,CAACC,YAAY,CAACG,MAAK,GAAIvB,SAAS,CAACwB,kBAAkB;UAC7D,IAAI,CAACL,KAAK,CAACC,YAAY,CAACK,IAAG,GAAI,IAAG;QACpC,CAAC;MACH,EAAE,OAAOC,KAAK,EAAE;QACdV,OAAO,CAACU,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAED;IACA;IACA;IACA;IACA;;IAEA;;;;;IAKAC,eAAeA,CAAA,EAAG;MAChB,IAAI;QACF,IAAI,CAACC,KAAK,CAAC,aAAa,EAAE,IAAI,CAACzB,UAAU;MAC3C,EAAE,OAAOuB,KAAK,EAAE;QACdV,OAAO,CAACU,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}