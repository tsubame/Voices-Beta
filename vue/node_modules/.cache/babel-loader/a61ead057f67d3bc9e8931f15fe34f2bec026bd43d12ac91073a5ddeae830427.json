{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"text-h6\"\n}, \"ユーザ情報の設定\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"small\", null, \"ユーザ名：\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"small\", null, \"アイコンを選択：\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_dialog = _resolveComponent(\"v-dialog\");\n  return _openBlock(), _createBlock(_component_v_dialog, {\n    modelValue: $data.isShowingDialog,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.isShowingDialog = $event),\n    ref: \"modalLoginDialog\",\n    persistent: \"\",\n    width: \"600\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_form, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card, null, {\n        default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n          default: _withCtx(() => [_hoisted_1]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_card_text, null, {\n          default: _withCtx(() => [_createVNode(_component_v_container, null, {\n            default: _withCtx(() => [_createVNode(_component_v_row, null, {\n              default: _withCtx(() => [_hoisted_2]),\n              _: 1 /* STABLE */\n            }), _createVNode(_component_v_row, null, {\n              default: _withCtx(() => [_createVNode(_component_v_col, {\n                cols: \"12\",\n                sm: \"6\",\n                md: \"4\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  label: \"ユーザ名\",\n                  modelValue: $data.name,\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event),\n                  rules: $data.nameRules,\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _createVNode(_component_v_row, null, {\n              default: _withCtx(() => [_hoisted_3]),\n              _: 1 /* STABLE */\n            }), _createVNode(_component_v_row, null, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.images, (src, index) => {\n                return _openBlock(), _createElementBlock(\"div\", {\n                  class: \"icon_area\",\n                  key: index\n                }, [_createVNode(_component_v_img, {\n                  src: src,\n                  class: _normalizeClass([\"icon\", {\n                    'active': $data.activeIndex === index\n                  }]),\n                  onClick: $event => $options.selectIcon(index)\n                }, null, 8 /* PROPS */, [\"src\", \"class\", \"onClick\"])]);\n              }), 128 /* KEYED_FRAGMENT */))]),\n\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_card_actions, null, {\n          default: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n            color: \"blue-darken-1\",\n            variant: \"elevated\",\n            onClick: $options.onOKButtonClick\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" OK \")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_spacer)]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","_component_v_dialog","$data","isShowingDialog","$event","ref","persistent","width","_createVNode","_component_v_form","_component_v_card","_component_v_card_title","_hoisted_1","_component_v_card_text","_component_v_container","_component_v_row","_hoisted_2","_component_v_col","cols","sm","md","_component_v_text_field","label","name","rules","nameRules","required","_hoisted_3","_createElementBlock","_Fragment","_renderList","images","src","index","key","_component_v_img","_normalizeClass","activeIndex","onClick","$options","selectIcon","_component_v_card_actions","_component_v_spacer","_component_v_btn","color","variant","onOKButtonClick"],"sources":["/Users/tsukamotohideki/go/src/github.com/tsubame/Voices/vue/src/components/App/AppModalLoginDialog.vue"],"sourcesContent":["<!--\n//======================================================\n//\n// AppModalLoginDialog.vue ゲストユーザログインダイアログ用コンポーネント\n//\n//======================================================\n-->\n\n<template>\n  <v-dialog\n      v-model=\"isShowingDialog\"\n      ref=\"modalLoginDialog\"\n      persistent\n      width=\"600\"\n    >\n    <v-form>    \n      <v-card>\n        <v-card-title>\n          <span class=\"text-h6\">ユーザ情報の設定</span>\n        </v-card-title>\n        <v-card-text>\n          <v-container>      \n            <v-row>\n              <small>ユーザ名：</small>\n            </v-row>\n            <v-row>\n              <v-col cols=\"12\" sm=\"6\" md=\"4\"> \n                <v-text-field\n                  label=\"ユーザ名\"\n                  v-model=\"name\"                  \n                  :rules=\"nameRules\"                \n                  required\n                ></v-text-field>             \n              </v-col>\n            </v-row>\n            <v-row>\n              <small>アイコンを選択：</small>\n            </v-row>\n            <v-row>\n              <div class = \"icon_area\" v-for=\"(src, index) in images\" :key=\"index\">  \n                <v-img :src=\"src\" class = \"icon\" :class=\"{ 'active': activeIndex === index }\" @click=\"selectIcon(index)\"/>   \n              </div>\n            </v-row>\n          </v-container>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"blue-darken-1\"\n            variant=\"elevated\"\n            @click=\"onOKButtonClick\"\n          >\n            OK\n          </v-btn>\n          <v-spacer></v-spacer>        \n        </v-card-actions>\n      </v-card>\n    </v-form>         \n  </v-dialog>     \n</template>\n\n<!--\n//======================================================\n//\n// Script\n//\n//======================================================\n-->\n\n<script>\n\n//======================================================\n//\n// AppModalLoginDialog.vue ゲストユーザ用ログインダイアログ\n//\n// [索引]\n//  □ 0. setup\n//  □ 1. watch\n//  □ 2. method\n//    ・2-1. アイコン画像クリック\n//    ・2-2. OKボタンクリック\n//\n//======================================================\n\n//import { CONSTANTS } from '../../consts/ConstantVals'\n\n// アイコンの選択肢の数\nconst SHOW_ICON_COUNT = 7\n\n/**\n * export\n */\nexport default {  \n\n  // props\n  props: ['showDialog'],\n\n  // data\n  data() {\n    return {\n      // 画像\n      images: this.$store.getters.getGuestUserIcons,\n      // アクティブな画像のインデックス\n      activeIndex: this.getRandomInt(SHOW_ICON_COUNT),\n      // バリデーション\n      nameRules: [\n          v => !!v || 'uesr name is required'\n      ],\n      name: \"\",\n      userIdStr: \"\",\n      profileImageUrl: \"\",      \n      isShowingDialog: this.showDialog,\n    }\n  },\n\n  //======================================================\n  //\n  // 0. setup\n  //\n  //======================================================\n\n  // setup\n  setup() {\n    try {      \n      //this.$store.dispatch(\"todo/addTodoAsync\", { title: \"New Todo\" });\n    } catch (error) {        \n      console.error(error);      \n    }\n  },\n\n  //======================================================\n  //\n  // 2. methods\n  //\n  //======================================================\n\n  methods: {\n\n    //======================================================\n    //\n    // 2-1. アイコン画像クリック\n    //\n    //======================================================\n\n    /**\n     * アイコン画像クリック\n     *   ・アクティブなインデックスをセット\n     */\n    selectIcon(index) {\n      this.activeIndex = index\n    },\n\n    //======================================================\n    //\n    // 2-2. OKボタンクリック\n    //\n    //======================================================\n\n    /**\n     * OKボタンクリック\n     *   ・ユーザデータをstoreにセット\n     */\n    onOKButtonClick() {\n      try {\n        // ユーザ名が空なら終了\n        if (this.name === \"\") {\n          return\n        }\n        // ランダムなユーザIDをセット\n        let n = this.getRandomInt(1000000)\n        this.userIdStr = String(n)\n\n        // ユーザデータをセット\n        const ud = {\n          id: n,\n          idStr: this.userIdStr,\n          name: this.name,\n          profileImageUrl: this.images[this.activeIndex],\n        }\n\n        // storeにデータをセット\n        this.$store.commit(\"setTargetUserData\", ud)\n      } catch (error) {\n        console.error(error);\n      }\n\n      // ダイアログを閉じる\n      this.isShowingDialog = false\n    },\n\n    /**\n     * ランダムな値を返す\n     * @param {*} max \n     */\n    getRandomInt(max) {\n      return Math.floor(Math.random() * max) \n    },\n\n    /**\n     * 画像ファイルを受け取ってrequireしたファイルパスを返す\n     */\n    getRequireImgPath(fName) {\n      let rfPath = fName\n\n      try {\n        rfPath = require('@/assets/img/' + fName)\n      } catch (error) {\n        console.error(error);\n      }\n\n      return rfPath;\n    }\n  }\n}\n</script>\n\n<!-- \n//======================================================\n//\n//  CSS\n//\n//======================================================\n-->\n<style>\n.icon {\n  width: 50px;\n  height: 50px;  \n  border-radius: 50%;\n}\n.active {\n  background: rgb(0,0,0, 0.1);\n}\n</style>\n\n"],"mappings":";gCAkBUA,mBAAA,CAAqC;EAA/BC,KAAK,EAAC;AAAS,GAAC,UAAQ;gCAK1BD,mBAAA,CAAoB,eAAb,OAAK;gCAaZA,mBAAA,CAAuB,eAAhB,UAAQ;;;;;;;;;;;;;;;;uBA3B3BE,YAAA,CAiDWC,mBAAA;gBAhDEC,KAAA,CAAAC,eAAe;+DAAfD,KAAA,CAAAC,eAAe,GAAAC,MAAA;IACxBC,GAAG,EAAC,kBAAkB;IACtBC,UAAU,EAAV,EAAU;IACVC,KAAK,EAAC;;sBAER,MA0CS,CA1CTC,YAAA,CA0CSC,iBAAA;wBAzCP,MAwCS,CAxCTD,YAAA,CAwCSE,iBAAA;0BAvCP,MAEe,CAFfF,YAAA,CAEeG,uBAAA;4BADb,MAAqC,CAArCC,UAAqC,C;;YAEvCJ,YAAA,CAwBcK,sBAAA;4BAvBZ,MAsBc,CAtBdL,YAAA,CAsBcM,sBAAA;8BArBZ,MAEQ,CAFRN,YAAA,CAEQO,gBAAA;gCADN,MAAoB,CAApBC,UAAoB,C;;gBAEtBR,YAAA,CASQO,gBAAA;gCARN,MAOQ,CAPRP,YAAA,CAOQS,gBAAA;gBAPDC,IAAI,EAAC,IAAI;gBAACC,EAAE,EAAC,GAAG;gBAACC,EAAE,EAAC;;kCACzB,MAKgB,CALhBZ,YAAA,CAKgBa,uBAAA;kBAJdC,KAAK,EAAC,MAAM;8BACHpB,KAAA,CAAAqB,IAAI;6EAAJrB,KAAA,CAAAqB,IAAI,GAAAnB,MAAA;kBACZoB,KAAK,EAAEtB,KAAA,CAAAuB,SAAS;kBACjBC,QAAQ,EAAR;;;;;;gBAINlB,YAAA,CAEQO,gBAAA;gCADN,MAAuB,CAAvBY,UAAuB,C;;gBAEzBnB,YAAA,CAIQO,gBAAA;gCAHmB,MAA8B,E,kBAAvDa,mBAAA,CAEMC,SAAA,QAAAC,WAAA,CAF0C5B,KAAA,CAAA6B,MAAM,GAArBC,GAAG,EAAEC,KAAK;qCAA3CL,mBAAA,CAEM;kBAFD7B,KAAK,EAAG,WAAW;kBAAiCmC,GAAG,EAAED;oBAC5DzB,YAAA,CAA0G2B,gBAAA;kBAAlGH,GAAG,EAAEA,GAAG;kBAAEjC,KAAK,EAAAqC,eAAA,EAAG,MAAM;oBAAA,UAAqBlC,KAAA,CAAAmC,WAAW,KAAKJ;kBAAK;kBAAKK,OAAK,EAAAlC,MAAA,IAAEmC,QAAA,CAAAC,UAAU,CAACP,KAAK;;;;;;;;;;;YAK9GzB,YAAA,CAUiBiC,yBAAA;4BATf,MAAqB,CAArBjC,YAAA,CAAqBkC,mBAAA,GACrBlC,YAAA,CAMQmC,gBAAA;YALNC,KAAK,EAAC,eAAe;YACrBC,OAAO,EAAC,UAAU;YACjBP,OAAK,EAAEC,QAAA,CAAAO;;8BACT,MAED,C,iBAFC,MAED,E;;0CACAtC,YAAA,CAAqBkC,mBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}