{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0263f9f7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", null, \"BGMの選択\", -1));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"small\", null, \"以下からBGMを選択し、OKを押して下さい。\", -1));\nconst _hoisted_3 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_list_subheader = _resolveComponent(\"v-list-subheader\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  return _openBlock(), _createBlock(_component_v_card, null, {\n    default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n      default: _withCtx(() => [_hoisted_1]),\n      _: 1\n    }), _createVNode(_component_v_card_text, null, {\n      default: _withCtx(() => [_createVNode(_component_v_container, null, {\n        default: _withCtx(() => [_hoisted_2, _createVNode(_component_v_list, null, {\n          default: _withCtx(() => [_createVNode(_component_v_list_subheader, null, {\n            default: _withCtx(() => [_createTextVNode(\"BGM一覧\")]),\n            _: 1\n          }), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.bgmFiles, (item, i) => {\n            return _openBlock(), _createBlock(_component_v_list_item, {\n              key: i,\n              value: item.title,\n              onClick: $event => $options.onListItemClick(item)\n            }, {\n              prepend: _withCtx(() => [_createVNode(_component_v_icon, null, {\n                default: _withCtx(() => [_createTextVNode(\"mdi-music\")]),\n                _: 1\n              })]),\n              default: _withCtx(() => [_createVNode(_component_v_list_item_title, {\n                textContent: _toDisplayString(item.title)\n              }, null, 8, [\"textContent\"])]),\n              _: 2\n            }, 1032, [\"value\", \"onClick\"]);\n          }), 128))]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_v_card_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n        id: \"okButton\",\n        variant: \"elevated\",\n        color: \"success\",\n        onClick: $options.onOKButtonClick\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" OK \")]),\n        _: 1\n      }, 8, [\"onClick\"]), _createVNode(_component_v_spacer)]),\n      _: 1\n    }), _createElementVNode(\"audio\", {\n      ref: \"audioElement\",\n      src: $data.returnData.selectedBgmUrl,\n      onCanplay: _cache[0] || (_cache[0] = (...args) => _ctx.play && _ctx.play(...args))\n    }, null, 40, _hoisted_3)]),\n    _: 1\n  });\n}","map":{"version":3,"names":["_createElementVNode","_createBlock","_component_v_card","_createVNode","_component_v_card_title","_hoisted_1","_component_v_card_text","_component_v_container","_hoisted_2","_component_v_list","_component_v_list_subheader","_createElementBlock","_Fragment","_renderList","$data","bgmFiles","item","i","_component_v_list_item","key","value","title","onClick","$event","$options","onListItemClick","prepend","_withCtx","_component_v_icon","_component_v_list_item_title","_toDisplayString","_component_v_card_actions","_component_v_spacer","_component_v_btn","id","variant","color","onOKButtonClick","ref","src","returnData","selectedBgmUrl","onCanplay","_cache","args","_ctx","play"],"sources":["/Users/tsukamotohideki/go/src/github.com/tsubame/Voices/vue/src/components/Room/RoomBGMSelectDialog.vue"],"sourcesContent":["<template>\n  <!-- BGM選択ダイアログ -->\n  <v-card>\n    <v-card-title>\n      <h4>BGMの選択</h4>      \n    </v-card-title>\n    <v-card-text>\n      <v-container>     \n        <small>以下からBGMを選択し、OKを押して下さい。</small> \n        <v-list>\n          <!--<v-list-item v-for=\"item in bgmFiles\" :key=\"item.title\" @click=\"handleItemClick(item)\">-->\n          <v-list-subheader>BGM一覧</v-list-subheader>\n\n          <v-list-item\n            v-for=\"(item, i) in bgmFiles\"\n            :key=\"i\"\n            :value=\"item.title\"\n            @click=\"onListItemClick(item)\"                \n          >\n            <template v-slot:prepend>\n              <v-icon>mdi-music</v-icon>\n            </template>\n\n            <v-list-item-title v-text=\"item.title\"></v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-container>\n    </v-card-text>\n    <v-card-actions>\n      <v-spacer></v-spacer>\n      <v-btn id = \"okButton\" variant=\"elevated\" color=\"success\" @click=\"onOKButtonClick\">\n        OK\n      </v-btn>\n      <v-spacer></v-spacer>      \n    </v-card-actions>\n\n    <!-- BGM再生用 -->\n    <audio ref=\"audioElement\" :src=\"returnData.selectedBgmUrl\" @canplay=\"play\"></audio>       \n  </v-card>        \n</template>\n\n<!--\n//======================================================\n//\n// Script\n//\n//======================================================  \n-->\n<script>\n\n//======================================================\n//\n// RoomBGMSelectDialog.vue BGM選択用ダイアログ\n// \n// [索引]\n//   □ 0. setup\n//\n//   □ 1. watch\n//\n//   □ 2. methods\n//      ・OKボタンクリック\n//\n//======================================================\n\nimport { CONSTANTS } from \"../../consts/ConstantVals.js\"\n/**\n * エクスポート\n */\nexport default {\n  // props\n  props: [\n    'selectedBgmTitle',\n    'selectedBgmUrl',\n  ],\n\n  // data\n  data() {\n    return {\n      returnData: {\n        selectedBgmTitle: this.selectedBgmTitle,\n        selectedBgmUrl: this.selectedBgmUrl,\n      },\n      // BGM選択肢の候補\n      bgmFiles: this.$store.getters.getBgms \n    }\n  },\n\n  //======================================================\n  //\n  // 1. watch\n  //\n  //======================================================\n\n  /**\n   * watch\n   */\n   watch: {\n\n  },\n\n  //======================================================\n  //\n  // 2. methods\n  //\n  //======================================================\n  \n  methods: {    \n\n    //======================================================\n    //\n    // 2-1. リストのアイテムクリック\n    //\n    //======================================================\n\n    /**\n     * リストのアイテムクリック\n     *   ・音楽再生\n     *   ・再生されたファイル名をセット\n     */\n    onListItemClick(item) {\n      try {      \n        // ファイルパスをセット\n        this.returnData.selectedBgmUrl =  item.filePath\n        this.returnData.selectedBgmTitle = item.title\n        console.log(this.returnData.selectedBgmUrl)\n\n        // 再生\n        this.$nextTick(function() {        \n          this.$refs.audioElement.pause();        \n          this.$refs.audioElement.play();\n          this.$refs.audioElement.volume = CONSTANTS.BGM_DEFAULT_VOLUME;   \n          this.$refs.audioElement.loop = true        \n        })\n      } catch (error) {        \n        console.error(error);      \n      }\n    },\n    \n    //======================================================\n    //\n    // 2-2. OKボタンクリック\n    //\n    //======================================================\n\n    /**\n     * OKボタンクリック\n     *   ・ダイアログを閉じる\n     *   ・storeに選択したBGMをセット\n     */\n    onOKButtonClick() {    \n      try {      \n        this.$emit('clickSubmit', this.returnData)\n      } catch (error) {        \n        console.error(error);      \n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n#okButton {\n  width: 100px;\n  margin: 0 0 40px;\n}\n</style>"],"mappings":";;gEAIMA,mBAAA,CAAe,YAAX,QAAM;gEAIRA,mBAAA,CAAqC,eAA9B,wBAAsB;;;;;;;;;;;;;;;uBANnCC,YAAA,CAoCSC,iBAAA;sBAnCP,MAEe,CAFfC,YAAA,CAEeC,uBAAA;wBADb,MAAe,CAAfC,UAAe,C;;QAEjBF,YAAA,CAqBcG,sBAAA;wBApBZ,MAmBc,CAnBdH,YAAA,CAmBcI,sBAAA;0BAlBZ,MAAqC,CAArCC,UAAqC,EACrCL,YAAA,CAgBSM,iBAAA;4BAdP,MAA0C,CAA1CN,YAAA,CAA0CO,2BAAA;8BAAxB,MAAK,C,iBAAL,OAAK,E;;iCAEvBC,mBAAA,CAWcC,SAAA,QAAAC,WAAA,CAVQC,KAAA,CAAAC,QAAQ,GAApBC,IAAI,EAAEC,CAAC;iCADjBhB,YAAA,CAWciB,sBAAA;cATXC,GAAG,EAAEF,CAAC;cACNG,KAAK,EAAEJ,IAAI,CAACK,KAAK;cACjBC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,eAAe,CAACT,IAAI;;cAEXU,OAAO,EAAAC,QAAA,CACtB,MAA0B,CAA1BxB,YAAA,CAA0ByB,iBAAA;kCAAlB,MAAS,C,iBAAT,WAAS,E;;;gCAGnB,MAA2D,CAA3DzB,YAAA,CAA2D0B,4BAAA;6BAAxCC,gBAAA,CAAQd,IAAI,CAACK,KAAK;;;;;;;;;;QAK7ClB,YAAA,CAMiB4B,yBAAA;wBALf,MAAqB,CAArB5B,YAAA,CAAqB6B,mBAAA,GACrB7B,YAAA,CAEQ8B,gBAAA;QAFDC,EAAE,EAAG,UAAU;QAACC,OAAO,EAAC,UAAU;QAACC,KAAK,EAAC,SAAS;QAAEd,OAAK,EAAEE,QAAA,CAAAa;;0BAAiB,MAEnF,C,iBAFmF,MAEnF,E;;0BACAlC,YAAA,CAAqB6B,mBAAA,E;;QAIvBhC,mBAAA,CAAmF;MAA5EsC,GAAG,EAAC,cAAc;MAAEC,GAAG,EAAEzB,KAAA,CAAA0B,UAAU,CAACC,cAAc;MAAGC,SAAO,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,IAAA,IAAAD,IAAA,CAAAC,IAAA,IAAAF,IAAA,CAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}