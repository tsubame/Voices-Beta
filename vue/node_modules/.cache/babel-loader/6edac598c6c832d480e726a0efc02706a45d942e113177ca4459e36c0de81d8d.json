{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//======================================================\n//\n// RoomEditFormView.vue 配信作成フォーム画面\n// \n// [索引]\n//   □ 0. setup\n//\n//   □ 1. watch\n//\n//   □ 2. methods\n//\n//======================================================\n\nimport axios from 'axios';\nimport { CONSTANTS } from \"../../consts/ConstantVals.js\";\nimport RoomBGMSelectDialog from '../../components/Room/RoomBGMSelectDialog.vue';\nimport RoomBGImageSelectDialog from '@/components/Room/RoomBGImageSelectDialog.vue';\n\n// axios設定\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\n/**\n * エクスポート\n */\nexport default {\n  // components\n  components: {\n    RoomBGMSelectDialog,\n    RoomBGImageSelectDialog\n  },\n  // data\n  data() {\n    return {\n      // カテゴリ\n      categories: CONSTANTS.ROOM_CATEGORY_VALS,\n      // 通信サービス\n      webRtcServices: CONSTANTS.ROOM_SERVICES_VALS,\n      // フォーム要素\n      form: {\n        title: '',\n        ownerUserId: 0,\n        ownerUserName: \"\",\n        thumImage_Url: '',\n        bgImageUrl: '',\n        bgmUrl: '',\n        category: '',\n        webRtcService: '',\n        description: '',\n        startedAt: new Date()\n      },\n      // BGM選択ダイアログを表示\n      showBGMDialog: false,\n      // 背景選択ダイアログを表示\n      showBGImageDialog: false,\n      // ローディングダイアログを表示\n      showLoadingDialog: false,\n      // 選択されたBGMタイトル\n      selectedBgmTitle: \"未選択\",\n      // 選択されたBGMURL\n      selectedBgmUrl: \"\",\n      // 選択された画像ファイルのタイトル\n      selectedImageTitle: \"未選択\",\n      // 選択された画像URL\n      selectedImageUrl: \"\"\n    };\n  },\n  //======================================================\n  //\n  // 1. mounted\n  //\n  //======================================================\n\n  mounted() {\n    try {\n      let d = this.$store.getters.getTargetUserData;\n      console.log(\"[ユーザデータ]\");\n      console.log(d);\n    } catch (error) {\n      console.error(error);\n    }\n  },\n  //======================================================\n  //\n  // 2. methods\n  //\n  //======================================================\n\n  methods: {\n    /**\n     * フォーム送信\n     */\n    async submitForm() {\n      // ユーザデータをセット\n      this.setPostRoomData();\n      console.log(\"[送信データプレビュー]\");\n      console.log(this.form);\n\n      // apiURLをセット\n      //let apiURL = getRoomCreateURL();\n\n      // ローディングダイアログを表示\n      this.showLoadingDialog = true;\n\n      // POST送信\n      axios.post(CONSTANTS.API_URL_GO_ROOM_CREATE, this.form).then(response => {\n        console.log(response.data);\n        // 部屋のIDをセット\n        const roomId = response.data.id;\n        // ローディングダイアログを閉じる\n        this.showLoadingDialog = false;\n        // 部屋一覧に遷移\n        this.$router.push('/rooms/' + roomId);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    /**\n     * DB登録用の部屋データをセット\n     *   ・ユーザID: storeからセット\n     *   ・サムネイル： storeからセット\n     *   ・BGM； dataからセット\n     *   ・背景画像： dataからセット\n     *   ・開始日時： 現在日時\n     */\n    setPostRoomData() {\n      try {\n        // リソースに付与するベースURLをセット\n        const baseUrl = window.location.protocol + '//' + window.location.host;\n\n        // ユーザID\n        this.form.ownerUserId = this.$store.getters.getTargetUserId;\n        // ユーザ名\n        this.form.ownerUserName = this.$store.getters.getTargetUserName;\n        // サムネイル\n        this.form.thumImageUrl = baseUrl + this.$store.getters.getTargetUserProfileImagerUrl;\n        // BGM\n        this.form.bgmUrl = baseUrl + this.selectedBgmUrl;\n        // 背景\n        this.form.bgImageUrl = baseUrl + this.selectedImageUrl;\n        // 開始日時\n        this.form.startedAt = new Date();\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    /**\n     * BGM選択ボタンクリック\n     */\n    onBGMSelectButtonClick() {\n      this.showBGMDialog = true;\n    },\n    /**\n     * BGM選択ダイアログのOKボタンクリック\n     */\n    onBGMSelectDialogOKButtonClick(params) {\n      this.showBGMDialog = false;\n      this.selectedBgmTitle = params.selectedBgmTitle;\n      this.selectedBgmUrl = params.selectedBgmUrl;\n    },\n    /**\n     * 背景画像選択ダイアログのOKボタンクリック\n     */\n    onBGImageSelectDialogOKButtonClick(params) {\n      try {\n        this.showBGImageDialog = false;\n        this.selectedImageTitle = params.selectedImageTitle;\n        this.selectedImageUrl = params.selectedImageUrl;\n        console.log(this.selectedImageTitle);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","CONSTANTS","RoomBGMSelectDialog","RoomBGImageSelectDialog","defaults","headers","post","components","data","categories","ROOM_CATEGORY_VALS","webRtcServices","ROOM_SERVICES_VALS","form","title","ownerUserId","ownerUserName","thumImage_Url","bgImageUrl","bgmUrl","category","webRtcService","description","startedAt","Date","showBGMDialog","showBGImageDialog","showLoadingDialog","selectedBgmTitle","selectedBgmUrl","selectedImageTitle","selectedImageUrl","mounted","d","$store","getters","getTargetUserData","console","log","error","methods","submitForm","setPostRoomData","API_URL_GO_ROOM_CREATE","then","response","roomId","id","$router","push","catch","baseUrl","window","location","protocol","host","getTargetUserId","getTargetUserName","thumImageUrl","getTargetUserProfileImagerUrl","onBGMSelectButtonClick","onBGMSelectDialogOKButtonClick","params","onBGImageSelectDialogOKButtonClick"],"sources":["/Users/tsukamotohideki/go/src/github.com/tsubame/Voices/vue/src/views/rooms/RoomEditFormView.vue"],"sourcesContent":["<template>\n  <v-main>\n    <v-form @submit.prevent=\"submitForm\">\n      <v-row justify=center>\n        <v-col cols=\"8\" class=\"mt-20\">\n          <h2 class=\"mt-200\">配信部屋作成</h2>\n          <router-link to=\"/rooms\"><v-btn icon=\"mdi-close\" variant=\"tonal\" id=\"editFormCloseBox\" rounded size=\"x-small\"></v-btn></router-link>  \n        </v-col>\n\n        <v-col cols=\"8\">\n          <!-- 部屋名 -->\n          <v-text-field\n            v-model=\"form.title\"\n            label=\"部屋名\"\n            required>\n          </v-text-field>\n\n          <!-- カテゴリ -->\n          <v-select\n            v-model=\"form.category\"\n            :items=\"categories\"\n            label=\"カテゴリ\"\n          ></v-select>        \n\n          <!-- 通信手段 -->\n          <v-select\n            v-model=\"form.webRtcService\"\n            :items=\"webRtcServices\"\n            label=\"通信手段\"\n          ></v-select>            \n        </v-col>   \n\n        <!-- BGM選択用ボタン -->\n        <v-col cols=\"8\" class=\"text-right\">        \n          <small>BGM: 『{{selectedBgmTitle}}』</small>&nbsp;\n          <v-btn \n            prepend-icon=\"mdi-music\"\n            class=\"selectButton\"\n            @click=\"onBGMSelectButtonClick\"\n          >\n          <template v-slot:prepend>\n            <v-icon color=\"success\"></v-icon>\n            </template>        \n            BGM選択\n          </v-btn>\n        </v-col>\n\n        <!-- 背景画像選択用ボタン  \n        <v-col cols=\"8\" class=\"text-right\">        \n          <small>背景: 『{{selectedImageTitle}}』</small>&nbsp;\n          <v-btn \n            prepend-icon=\"mdi-picture-in-picture-bottom-right\"\n            class=\"selectButton\"\n            @click=\"showBGImageDialog=true\"         \n          >\n          <template v-slot:prepend>\n            <v-icon color=\"success\"></v-icon>\n            </template>        \n            背景選択\n          </v-btn>\n        </v-col>      \n      -->\n\n        <!-- 配信開始ボタン -->\n        <v-col cols=\"8\" class=\"text-center\">        \n          <v-btn large id = \"castStartButton\"\n            prepend-icon=\"mdi-cast\"\n            type=\"submit\" \n          >\n            <template v-slot:prepend>\n              <v-icon color=\"success\"></v-icon>\n            </template>        \n            配信開始\n          </v-btn>\n        </v-col>\n      </v-row>\n\n      <!-- BGM選択用ダイアログ -->\n      <v-dialog\n        v-model=\"showBGMDialog\"\n        persistent\n        width=\"600\"\n      >    \n        <RoomBGMSelectDialog         \n          v-on:clickSubmit=\"onBGMSelectDialogOKButtonClick\"\n          :selectedBgmTitle=\"selectedBgmTitle\"\n        />      \n      </v-dialog>\n\n      <!-- 背景画像選択用ダイアログ -->\n      <v-dialog\n        v-model=\"showBGImageDialog\"\n        persistent\n        width=\"600\"\n      >    \n        <RoomBGImageSelectDialog        \n          v-on:clickSubmit=\"onBGImageSelectDialogOKButtonClick\"\n          :selectedImageTitle=\"selectedImageTitle\"\n        />      \n      </v-dialog>    \n\n      <!-- ローディングダイアログ -->\n      <v-dialog\n        v-model=\"showLoadingDialog\"\n        hide-overlay\n        persistent\n        width=\"300\"\n      >\n        <v-card\n          color=\"success\"\n          dark\n        >\n          <v-card-text>\n            Please stand by\n            <v-progress-linear\n              indeterminate\n              color=\"white\"\n              class=\"mb-0\"\n            ></v-progress-linear>\n          </v-card-text>\n        </v-card>\n      </v-dialog>      \n    </v-form>      \n  </v-main>\n</template>\n\n<!--\n//======================================================\n//\n// Script\n//\n//======================================================  \n-->\n<script>\n\n//======================================================\n//\n// RoomEditFormView.vue 配信作成フォーム画面\n// \n// [索引]\n//   □ 0. setup\n//\n//   □ 1. watch\n//\n//   □ 2. methods\n//\n//======================================================\n\nimport axios from 'axios'\nimport { CONSTANTS } from \"../../consts/ConstantVals.js\"\nimport RoomBGMSelectDialog from '../../components/Room/RoomBGMSelectDialog.vue';\nimport RoomBGImageSelectDialog from '@/components/Room/RoomBGImageSelectDialog.vue';\n\n// axios設定\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\n/**\n * エクスポート\n */\nexport default {\n\n  // components\n  components: {\n    RoomBGMSelectDialog,\n    RoomBGImageSelectDialog\n  },\n\n  // data\n  data() {\n    return {\n      // カテゴリ\n      categories: CONSTANTS.ROOM_CATEGORY_VALS,    \n      // 通信サービス\n      webRtcServices: CONSTANTS.ROOM_SERVICES_VALS,  \n      // フォーム要素\n      form: {\n        title: '',\n        ownerUserId: 0,\n        ownerUserName: \"\",\n        thumImage_Url: '',\n        bgImageUrl: '',\n        bgmUrl: '',\n        category: '',\n        webRtcService: '',\n        description: '',\n        startedAt: new Date(),\n      },\n      // BGM選択ダイアログを表示\n      showBGMDialog: false,\n      // 背景選択ダイアログを表示\n      showBGImageDialog: false,\n      // ローディングダイアログを表示\n      showLoadingDialog: false,\n      // 選択されたBGMタイトル\n      selectedBgmTitle: \"未選択\",\n      // 選択されたBGMURL\n      selectedBgmUrl: \"\",      \n      // 選択された画像ファイルのタイトル\n      selectedImageTitle: \"未選択\",\n      // 選択された画像URL\n      selectedImageUrl: \"\",\n    }\n  },\n\n  //======================================================\n  //\n  // 1. mounted\n  //\n  //======================================================\n\n  mounted() {\n    try {      \n      let d = this.$store.getters.getTargetUserData\n      console.log(\"[ユーザデータ]\")\n      console.log(d)\n    } catch (error) {        \n        console.error(error);      \n    }\n  },\n\n  //======================================================\n  //\n  // 2. methods\n  //\n  //======================================================\n\n  methods: {    \n\n    /**\n     * フォーム送信\n     */\n    async submitForm() {    \n      // ユーザデータをセット\n      this.setPostRoomData()   \n      console.log(\"[送信データプレビュー]\")\n      console.log(this.form)\n\n      // apiURLをセット\n      //let apiURL = getRoomCreateURL();\n\n      // ローディングダイアログを表示\n      this.showLoadingDialog = true\n\n      // POST送信\n      axios.post(CONSTANTS.API_URL_GO_ROOM_CREATE, this.form)\n        .then(response => {\n          console.log(response.data)\n          // 部屋のIDをセット\n          const roomId = response.data.id\n          // ローディングダイアログを閉じる\n          this.showLoadingDialog = false\n          // 部屋一覧に遷移\n          this.$router.push('/rooms/' + roomId)          \n        })\n        .catch(error => {\n          console.log(error)\n        })      \n    },\n\n    /**\n     * DB登録用の部屋データをセット\n     *   ・ユーザID: storeからセット\n     *   ・サムネイル： storeからセット\n     *   ・BGM； dataからセット\n     *   ・背景画像： dataからセット\n     *   ・開始日時： 現在日時\n     */\n    setPostRoomData() {\n      try {      \n        // リソースに付与するベースURLをセット\n        const baseUrl = window.location.protocol + '//' + window.location.host; \n\n        // ユーザID\n        this.form.ownerUserId = this.$store.getters.getTargetUserId\n        // ユーザ名\n        this.form.ownerUserName = this.$store.getters.getTargetUserName\n        // サムネイル\n        this.form.thumImageUrl = baseUrl + this.$store.getters.getTargetUserProfileImagerUrl  \n        // BGM\n        this.form.bgmUrl = baseUrl + this.selectedBgmUrl\n        // 背景\n        this.form.bgImageUrl = baseUrl + this.selectedImageUrl\n        // 開始日時\n        this.form.startedAt = new Date()\n      } catch (error) {        \n        console.error(error);     \n      }\n    },\n\n    /**\n     * BGM選択ボタンクリック\n     */\n    onBGMSelectButtonClick() {\n      this.showBGMDialog = true    \n    },\n    /**\n     * BGM選択ダイアログのOKボタンクリック\n     */\n    onBGMSelectDialogOKButtonClick(params) {\n      this.showBGMDialog = false   \n      this.selectedBgmTitle = params.selectedBgmTitle\n      this.selectedBgmUrl = params.selectedBgmUrl\n    },\n\n    /**\n     * 背景画像選択ダイアログのOKボタンクリック\n     */\n     onBGImageSelectDialogOKButtonClick(params) {\n      try {\n        this.showBGImageDialog = false   \n        this.selectedImageTitle = params.selectedImageTitle\n        this.selectedImageUrl = params.selectedImageUrl\n\n        console.log(this.selectedImageTitle)\n      } catch(error) {\n        console.error(error);  \n      }\n    }    \n  }\n}\n</script>\n\n<style scoped>\n\n/* テキスト */\nsmall {\n  font-family: 'Hiragino Sans', Meiryo, sans-serif;\n  font-weight: 200;\n}\n\n/* 画像、音楽選択ボタン  */\n.selectButton {\n  width: 120px;\n}\n\n/* 配信開始ボタン */\n#castStartButton {\n  margin: 80px 0; \n  padding: 20px;\n  width: 200px;\n  height: 60px;\n}\n\n/* 閉じるボタン */\n#editFormCloseBox {\n  border: solid 0px #999999;\n  position: fixed;\n  top: 10px;\n  right: 10px;\n  border: solid 1px #CCCCCC;\n  color: #333333;\n}\n\n</style>"],"mappings":";AAuIA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,OAAOA,KAAI,MAAO,OAAM;AACxB,SAASC,SAAQ,QAAS,8BAA6B;AACvD,OAAOC,mBAAkB,MAAO,+CAA+C;AAC/E,OAAOC,uBAAsB,MAAO,+CAA+C;;AAEnF;AACAH,KAAK,CAACI,QAAQ,CAACC,OAAO,CAACC,IAAI,CAAC,6BAA6B,IAAI,GAAG;;AAEhE;;;AAGA,eAAe;EAEb;EACAC,UAAU,EAAE;IACVL,mBAAmB;IACnBC;EACF,CAAC;EAED;EACAK,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,UAAU,EAAER,SAAS,CAACS,kBAAkB;MACxC;MACAC,cAAc,EAAEV,SAAS,CAACW,kBAAkB;MAC5C;MACAC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,CAAC;QACdC,aAAa,EAAE,EAAE;QACjBC,aAAa,EAAE,EAAE;QACjBC,UAAU,EAAE,EAAE;QACdC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,EAAE;QACZC,aAAa,EAAE,EAAE;QACjBC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE,IAAIC,IAAI;MACrB,CAAC;MACD;MACAC,aAAa,EAAE,KAAK;MACpB;MACAC,iBAAiB,EAAE,KAAK;MACxB;MACAC,iBAAiB,EAAE,KAAK;MACxB;MACAC,gBAAgB,EAAE,KAAK;MACvB;MACAC,cAAc,EAAE,EAAE;MAClB;MACAC,kBAAkB,EAAE,KAAK;MACzB;MACAC,gBAAgB,EAAE;IACpB;EACF,CAAC;EAED;EACA;EACA;EACA;EACA;;EAEAC,OAAOA,CAAA,EAAG;IACR,IAAI;MACF,IAAIC,CAAA,GAAI,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,iBAAgB;MAC5CC,OAAO,CAACC,GAAG,CAAC,UAAU;MACtBD,OAAO,CAACC,GAAG,CAACL,CAAC;IACf,EAAE,OAAOM,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACxB;EACF,CAAC;EAED;EACA;EACA;EACA;EACA;;EAEAC,OAAO,EAAE;IAEP;;;IAGA,MAAMC,UAAUA,CAAA,EAAG;MACjB;MACA,IAAI,CAACC,eAAe,EAAC;MACrBL,OAAO,CAACC,GAAG,CAAC,cAAc;MAC1BD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACzB,IAAI;;MAErB;MACA;;MAEA;MACA,IAAI,CAACc,iBAAgB,GAAI,IAAG;;MAE5B;MACA3B,KAAK,CAACM,IAAI,CAACL,SAAS,CAAC0C,sBAAsB,EAAE,IAAI,CAAC9B,IAAI,EACnD+B,IAAI,CAACC,QAAO,IAAK;QAChBR,OAAO,CAACC,GAAG,CAACO,QAAQ,CAACrC,IAAI;QACzB;QACA,MAAMsC,MAAK,GAAID,QAAQ,CAACrC,IAAI,CAACuC,EAAC;QAC9B;QACA,IAAI,CAACpB,iBAAgB,GAAI,KAAI;QAC7B;QACA,IAAI,CAACqB,OAAO,CAACC,IAAI,CAAC,SAAQ,GAAIH,MAAM;MACtC,CAAC,EACAI,KAAK,CAACX,KAAI,IAAK;QACdF,OAAO,CAACC,GAAG,CAACC,KAAK;MACnB,CAAC;IACL,CAAC;IAED;;;;;;;;IAQAG,eAAeA,CAAA,EAAG;MAChB,IAAI;QACF;QACA,MAAMS,OAAM,GAAIC,MAAM,CAACC,QAAQ,CAACC,QAAO,GAAI,IAAG,GAAIF,MAAM,CAACC,QAAQ,CAACE,IAAI;;QAEtE;QACA,IAAI,CAAC1C,IAAI,CAACE,WAAU,GAAI,IAAI,CAACmB,MAAM,CAACC,OAAO,CAACqB,eAAc;QAC1D;QACA,IAAI,CAAC3C,IAAI,CAACG,aAAY,GAAI,IAAI,CAACkB,MAAM,CAACC,OAAO,CAACsB,iBAAgB;QAC9D;QACA,IAAI,CAAC5C,IAAI,CAAC6C,YAAW,GAAIP,OAAM,GAAI,IAAI,CAACjB,MAAM,CAACC,OAAO,CAACwB,6BAA4B;QACnF;QACA,IAAI,CAAC9C,IAAI,CAACM,MAAK,GAAIgC,OAAM,GAAI,IAAI,CAACtB,cAAa;QAC/C;QACA,IAAI,CAAChB,IAAI,CAACK,UAAS,GAAIiC,OAAM,GAAI,IAAI,CAACpB,gBAAe;QACrD;QACA,IAAI,CAAClB,IAAI,CAACU,SAAQ,GAAI,IAAIC,IAAI,EAAC;MACjC,EAAE,OAAOe,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAED;;;IAGAqB,sBAAsBA,CAAA,EAAG;MACvB,IAAI,CAACnC,aAAY,GAAI,IAAG;IAC1B,CAAC;IACD;;;IAGAoC,8BAA8BA,CAACC,MAAM,EAAE;MACrC,IAAI,CAACrC,aAAY,GAAI,KAAI;MACzB,IAAI,CAACG,gBAAe,GAAIkC,MAAM,CAAClC,gBAAe;MAC9C,IAAI,CAACC,cAAa,GAAIiC,MAAM,CAACjC,cAAa;IAC5C,CAAC;IAED;;;IAGCkC,kCAAkCA,CAACD,MAAM,EAAE;MAC1C,IAAI;QACF,IAAI,CAACpC,iBAAgB,GAAI,KAAI;QAC7B,IAAI,CAACI,kBAAiB,GAAIgC,MAAM,CAAChC,kBAAiB;QAClD,IAAI,CAACC,gBAAe,GAAI+B,MAAM,CAAC/B,gBAAe;QAE9CM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,kBAAkB;MACrC,EAAE,OAAMS,KAAK,EAAE;QACbF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}