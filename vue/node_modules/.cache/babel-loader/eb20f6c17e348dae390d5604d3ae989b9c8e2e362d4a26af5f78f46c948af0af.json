{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-23fa667b\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"mt-200\"\n}, \"配信部屋作成\", -1));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_RoomBGMSelectDialog = _resolveComponent(\"RoomBGMSelectDialog\");\n  const _component_v_dialog = _resolveComponent(\"v-dialog\");\n  const _component_RoomBGImageSelectDialog = _resolveComponent(\"RoomBGImageSelectDialog\");\n  const _component_v_progress_linear = _resolveComponent(\"v-progress-linear\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  return _openBlock(), _createBlock(_component_v_main, null, {\n    default: _withCtx(() => [_createVNode(_component_v_form, {\n      onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_row, {\n        justify: \"center\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_col, {\n          cols: \"8\",\n          class: \"mt-20\"\n        }, {\n          default: _withCtx(() => [_hoisted_1, _createVNode(_component_router_link, {\n            to: \"/rooms\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_btn, {\n              icon: \"mdi-close\",\n              variant: \"tonal\",\n              id: \"editFormCloseBox\",\n              rounded: \"\",\n              size: \"x-small\"\n            })]),\n            _: 1\n          })]),\n          _: 1\n        }), _createVNode(_component_v_col, {\n          cols: \"8\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_text_field, {\n            modelValue: $data.form.title,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.title = $event),\n            label: \"部屋名\",\n            required: \"\"\n          }, null, 8, [\"modelValue\"]), _createVNode(_component_v_select, {\n            modelValue: $data.form.category,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.category = $event),\n            items: $data.categories,\n            label: \"カテゴリ\"\n          }, null, 8, [\"modelValue\", \"items\"]), _createVNode(_component_v_select, {\n            modelValue: $data.form.webRtcService,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.webRtcService = $event),\n            items: $data.webRtcServices,\n            label: \"通信手段\"\n          }, null, 8, [\"modelValue\", \"items\"])]),\n          _: 1\n        }), _createVNode(_component_v_col, {\n          cols: \"8\",\n          class: \"text-right\"\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"small\", null, \"BGM: 『\" + _toDisplayString($data.selectedBgmTitle) + \"』\", 1), _createTextVNode(\"  \"), _createVNode(_component_v_btn, {\n            \"prepend-icon\": \"mdi-music\",\n            class: \"selectButton\",\n            onClick: $options.onBGMSelectButtonClick\n          }, {\n            prepend: _withCtx(() => [_createVNode(_component_v_icon, {\n              color: \"success\"\n            })]),\n            default: _withCtx(() => [_createTextVNode(\" BGM選択 \")]),\n            _: 1\n          }, 8, [\"onClick\"])]),\n          _: 1\n        }), _createVNode(_component_v_col, {\n          cols: \"8\",\n          class: \"text-center\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_btn, {\n            large: \"\",\n            id: \"castStartButton\",\n            \"prepend-icon\": \"mdi-cast\",\n            type: \"submit\"\n          }, {\n            prepend: _withCtx(() => [_createVNode(_component_v_icon, {\n              color: \"success\"\n            })]),\n            default: _withCtx(() => [_createTextVNode(\" 配信開始 \")]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_v_dialog, {\n        modelValue: $data.showBGMDialog,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.showBGMDialog = $event),\n        persistent: \"\",\n        width: \"600\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_RoomBGMSelectDialog, {\n          onClickSubmit: $options.onBGMSelectDialogOKButtonClick,\n          selectedBgmTitle: $data.selectedBgmTitle\n        }, null, 8, [\"onClickSubmit\", \"selectedBgmTitle\"])]),\n        _: 1\n      }, 8, [\"modelValue\"]), _createVNode(_component_v_dialog, {\n        modelValue: $data.showBGImageDialog,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.showBGImageDialog = $event),\n        persistent: \"\",\n        width: \"600\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_RoomBGImageSelectDialog, {\n          onClickSubmit: $options.onBGImageSelectDialogOKButtonClick,\n          selectedImageTitle: $data.selectedImageTitle\n        }, null, 8, [\"onClickSubmit\", \"selectedImageTitle\"])]),\n        _: 1\n      }, 8, [\"modelValue\"]), _createVNode(_component_v_dialog, {\n        modelValue: $data.showLoadingDialog,\n        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.showLoadingDialog = $event),\n        \"hide-overlay\": \"\",\n        persistent: \"\",\n        width: \"300\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card, {\n          color: \"success\",\n          dark: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [_createTextVNode(\" Please stand by \"), _createVNode(_component_v_progress_linear, {\n              indeterminate: \"\",\n              color: \"white\",\n              class: \"mb-0\"\n            })]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"modelValue\"])]),\n      _: 1\n    }, 8, [\"onSubmit\"])]),\n    _: 1\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","_component_v_main","_createVNode","_component_v_form","onSubmit","_withModifiers","$options","submitForm","_component_v_row","justify","_component_v_col","cols","_hoisted_1","_component_router_link","to","_component_v_btn","icon","variant","id","rounded","size","_component_v_text_field","$data","form","title","$event","label","required","_component_v_select","category","items","categories","webRtcService","webRtcServices","_toDisplayString","selectedBgmTitle","onClick","onBGMSelectButtonClick","prepend","_withCtx","_component_v_icon","color","large","type","_component_v_dialog","showBGMDialog","persistent","width","_component_RoomBGMSelectDialog","onClickSubmit","onBGMSelectDialogOKButtonClick","showBGImageDialog","_component_RoomBGImageSelectDialog","onBGImageSelectDialogOKButtonClick","selectedImageTitle","showLoadingDialog","_component_v_card","dark","_component_v_card_text","_component_v_progress_linear","indeterminate"],"sources":["/Users/tsukamotohideki/go/src/github.com/tsubame/Voices/vue/src/views/rooms/RoomEditFormView.vue"],"sourcesContent":["<template>\n  <v-main>\n    <v-form @submit.prevent=\"submitForm\">\n      <v-row justify=center>\n        <v-col cols=\"8\" class=\"mt-20\">\n          <h2 class=\"mt-200\">配信部屋作成</h2>\n          <router-link to=\"/rooms\"><v-btn icon=\"mdi-close\" variant=\"tonal\" id=\"editFormCloseBox\" rounded size=\"x-small\"></v-btn></router-link>  \n        </v-col>\n\n        <v-col cols=\"8\">\n          <!-- 部屋名 -->\n          <v-text-field\n            v-model=\"form.title\"\n            label=\"部屋名\"\n            required>\n          </v-text-field>\n\n          <!-- カテゴリ -->\n          <v-select\n            v-model=\"form.category\"\n            :items=\"categories\"\n            label=\"カテゴリ\"\n          ></v-select>        \n\n          <!-- 通信手段 -->\n          <v-select\n            v-model=\"form.webRtcService\"\n            :items=\"webRtcServices\"\n            label=\"通信手段\"\n          ></v-select>            \n        </v-col>   \n\n        <!-- BGM選択用ボタン -->\n        <v-col cols=\"8\" class=\"text-right\">        \n          <small>BGM: 『{{selectedBgmTitle}}』</small>&nbsp;\n          <v-btn \n            prepend-icon=\"mdi-music\"\n            class=\"selectButton\"\n            @click=\"onBGMSelectButtonClick\"\n          >\n          <template v-slot:prepend>\n            <v-icon color=\"success\"></v-icon>\n            </template>        \n            BGM選択\n          </v-btn>\n        </v-col>\n\n        <!-- 背景画像選択用ボタン  \n        <v-col cols=\"8\" class=\"text-right\">        \n          <small>背景: 『{{selectedImageTitle}}』</small>&nbsp;\n          <v-btn \n            prepend-icon=\"mdi-picture-in-picture-bottom-right\"\n            class=\"selectButton\"\n            @click=\"showBGImageDialog=true\"         \n          >\n          <template v-slot:prepend>\n            <v-icon color=\"success\"></v-icon>\n            </template>        \n            背景選択\n          </v-btn>\n        </v-col>      \n      -->\n\n        <!-- 配信開始ボタン -->\n        <v-col cols=\"8\" class=\"text-center\">        \n          <v-btn large id = \"castStartButton\"\n            prepend-icon=\"mdi-cast\"\n            type=\"submit\" \n          >\n            <template v-slot:prepend>\n              <v-icon color=\"success\"></v-icon>\n            </template>        \n            配信開始\n          </v-btn>\n        </v-col>\n      </v-row>\n\n      <!-- BGM選択用ダイアログ -->\n      <v-dialog\n        v-model=\"showBGMDialog\"\n        persistent\n        width=\"600\"\n      >    \n        <RoomBGMSelectDialog         \n          v-on:clickSubmit=\"onBGMSelectDialogOKButtonClick\"\n          :selectedBgmTitle=\"selectedBgmTitle\"\n        />      \n      </v-dialog>\n\n      <!-- 背景画像選択用ダイアログ -->\n      <v-dialog\n        v-model=\"showBGImageDialog\"\n        persistent\n        width=\"600\"\n      >    \n        <RoomBGImageSelectDialog        \n          v-on:clickSubmit=\"onBGImageSelectDialogOKButtonClick\"\n          :selectedImageTitle=\"selectedImageTitle\"\n        />      \n      </v-dialog>    \n\n      <!-- ローディングダイアログ -->\n      <v-dialog\n        v-model=\"showLoadingDialog\"\n        hide-overlay\n        persistent\n        width=\"300\"\n      >\n        <v-card\n          color=\"success\"\n          dark\n        >\n          <v-card-text>\n            Please stand by\n            <v-progress-linear\n              indeterminate\n              color=\"white\"\n              class=\"mb-0\"\n            ></v-progress-linear>\n          </v-card-text>\n        </v-card>\n      </v-dialog>      \n    </v-form>      \n  </v-main>\n</template>\n\n<!--\n//======================================================\n//\n// Script\n//\n//======================================================  \n-->\n<script>\n\n//======================================================\n//\n// RoomEditFormView.vue 配信作成フォーム画面\n// \n// [索引]\n//   □ 0. setup\n//\n//   □ 1. watch\n//\n//   □ 2. methods\n//\n//======================================================\n\nimport axios from 'axios'\nimport { CONSTANTS } from \"../../consts/ConstantVals.js\"\nimport RoomBGMSelectDialog from '../../components/Room/RoomBGMSelectDialog.vue';\nimport RoomBGImageSelectDialog from '@/components/Room/RoomBGImageSelectDialog.vue';\n\n// axios設定\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\n/**\n * エクスポート\n */\nexport default {\n\n  // components\n  components: {\n    RoomBGMSelectDialog,\n    RoomBGImageSelectDialog\n  },\n\n  // data\n  data() {\n    return {\n      // カテゴリ\n      categories: CONSTANTS.ROOM_CATEGORY_VALS,    \n      // 通信サービス\n      webRtcServices: CONSTANTS.ROOM_SERVICES_VALS,  \n      // フォーム要素\n      form: {\n        title: '',\n        ownerUserId: 0,\n        ownerUserName: \"\",\n        thumImage_Url: '',\n        bgImageUrl: '',\n        bgmUrl: '',\n        category: '',\n        webRtcService: '',\n        description: '',\n        startedAt: new Date(),\n      },\n      // BGM選択ダイアログを表示\n      showBGMDialog: false,\n      // 背景選択ダイアログを表示\n      showBGImageDialog: false,\n      // ローディングダイアログを表示\n      showLoadingDialog: false,\n      // 選択されたBGMタイトル\n      selectedBgmTitle: \"未選択\",\n      // 選択されたBGMURL\n      selectedBgmUrl: \"\",      \n      // 選択された画像ファイルのタイトル\n      selectedImageTitle: \"未選択\",\n      // 選択された画像URL\n      selectedImageUrl: \"\",\n    }\n  },\n\n  //======================================================\n  //\n  // 1. mounted\n  //\n  //======================================================\n\n  mounted() {\n    try {      \n      let d = this.$store.getters.getTargetUserData\n      console.log(\"[ユーザデータ]\")\n      console.log(d)\n    } catch (error) {        \n        console.error(error);      \n    }\n  },\n\n  //======================================================\n  //\n  // 2. methods\n  //\n  //======================================================\n\n  methods: {    \n\n    /**\n     * フォーム送信\n     */\n    async submitForm() {    \n      // ユーザデータをセット\n      this.setPostRoomData()   \n      console.log(\"[送信データプレビュー]\")\n      console.log(this.form)\n\n      // apiURLをセット\n      //let apiURL = getRoomCreateURL();\n\n      // ローディングダイアログを表示\n      this.showLoadingDialog = true\n\n      // POST送信\n      axios.post(CONSTANTS.API_URL_GO_ROOM_CREATE, this.form)\n        .then(response => {\n          console.log(response.data)\n          // 部屋のIDをセット\n          const roomId = response.data.id\n          // ローディングダイアログを閉じる\n          this.showLoadingDialog = false\n          // 部屋一覧に遷移\n          this.$router.push('/rooms/' + roomId)          \n        })\n        .catch(error => {\n          console.log(error)\n        })      \n    },\n\n    /**\n     * DB登録用の部屋データをセット\n     *   ・ユーザID: storeからセット\n     *   ・サムネイル： storeからセット\n     *   ・BGM； dataからセット\n     *   ・背景画像： dataからセット\n     *   ・開始日時： 現在日時\n     */\n    setPostRoomData() {\n      try {      \n        // リソースに付与するベースURLをセット\n        const baseUrl = window.location.protocol + '//' + window.location.host; \n\n        // ユーザID\n        this.form.ownerUserId = this.$store.getters.getTargetUserId\n        // ユーザ名\n        this.form.ownerUserName = this.$store.getters.getTargetUserName\n        // サムネイル\n        this.form.thumImageUrl = baseUrl + this.$store.getters.getTargetUserProfileImagerUrl  \n        // BGM\n        this.form.bgmUrl = baseUrl + this.selectedBgmUrl\n        // 背景\n        this.form.bgImageUrl = baseUrl + this.selectedImageUrl\n        // 開始日時\n        this.form.startedAt = new Date()\n      } catch (error) {        \n        console.error(error);     \n      }\n    },\n\n    /**\n     * BGM選択ボタンクリック\n     */\n    onBGMSelectButtonClick() {\n      this.showBGMDialog = true    \n    },\n    /**\n     * BGM選択ダイアログのOKボタンクリック\n     */\n    onBGMSelectDialogOKButtonClick(params) {\n      this.showBGMDialog = false   \n      this.selectedBgmTitle = params.selectedBgmTitle\n      this.selectedBgmUrl = params.selectedBgmUrl\n    },\n\n    /**\n     * 背景画像選択ダイアログのOKボタンクリック\n     */\n     onBGImageSelectDialogOKButtonClick(params) {\n      try {\n        this.showBGImageDialog = false   \n        this.selectedImageTitle = params.selectedImageTitle\n        this.selectedImageUrl = params.selectedImageUrl\n\n        console.log(this.selectedImageTitle)\n      } catch(error) {\n        console.error(error);  \n      }\n    }    \n  }\n}\n</script>\n\n<style scoped>\n\n/* テキスト */\nsmall {\n  font-family: 'Hiragino Sans', Meiryo, sans-serif;\n  font-weight: 200;\n}\n\n/* 画像、音楽選択ボタン  */\n.selectButton {\n  width: 120px;\n}\n\n/* 配信開始ボタン */\n#castStartButton {\n  margin: 80px 0; \n  padding: 20px;\n  width: 200px;\n  height: 60px;\n}\n\n/* 閉じるボタン */\n#editFormCloseBox {\n  border: solid 0px #999999;\n  position: fixed;\n  top: 10px;\n  right: 10px;\n  border: solid 1px #CCCCCC;\n  color: #333333;\n}\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}