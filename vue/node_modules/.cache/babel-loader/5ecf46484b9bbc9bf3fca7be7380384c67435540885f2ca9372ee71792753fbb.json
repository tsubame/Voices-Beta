{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, mergeProps as _mergeProps, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withKeys as _withKeys, vShow as _vShow, withDirectives as _withDirectives, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"roomContainer\"\n};\nconst _hoisted_2 = {\n  class: \"roomHeader\"\n};\nconst _hoisted_3 = {\n  id: \"chatArea\"\n};\nconst _hoisted_4 = {\n  ref: \"remoteMediaArea\"\n};\nconst _hoisted_5 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_dialog = _resolveComponent(\"v-dialog\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_ChatItem = _resolveComponent(\"ChatItem\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_content = _resolveComponent(\"v-content\");\n  const _component_footer_menu = _resolveComponent(\"footer-menu\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_MusicPlayerPopover = _resolveComponent(\"MusicPlayerPopover\");\n  const _component_v_footer = _resolveComponent(\"v-footer\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  return _openBlock(), _createBlock(_component_v_main, null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"header\", _hoisted_2, [_createCommentVNode(\"<v-btn v-on:click=\\\"sendConReqToFB\\\">リクエスト</v-btn>        \"), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"9\"\n      }), _createVNode(_component_v_col, {\n        cols: \"3\",\n        class: \"text-right\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" ダイアログ \"), _createVNode(_component_v_dialog, {\n          modelValue: $data.dialog,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.dialog = $event),\n          persistent: \"\",\n          width: \"auto\"\n        }, {\n          activator: _withCtx(({\n            props\n          }) => [_createVNode(_component_v_btn, _mergeProps(props, {\n            rounded: \"\"\n          }), {\n            default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n              default: _withCtx(() => [_createTextVNode(\"mdi-phone\")]),\n              _: 1 /* STABLE */\n            }), _createTextVNode(\"通話に参加 \")]),\n            _: 2 /* DYNAMIC */\n          }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */)]),\n\n          default: _withCtx(() => [_createVNode(_component_v_card, null, {\n            default: _withCtx(() => [_createVNode(_component_v_card_title, {\n              class: \"text-h5\"\n            }), _createVNode(_component_v_card_text, null, {\n              default: _withCtx(() => [_createTextVNode(\"通話に参加します。よろしいですか？\")]),\n              _: 1 /* STABLE */\n            }), _createVNode(_component_v_card_actions, null, {\n              default: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n                color: \"green-darken-1\",\n                variant: \"text\",\n                onClick: _cache[0] || (_cache[0] = $event => $data.dialog = false)\n              }, {\n                default: _withCtx(() => [_createTextVNode(\" Cancel \")]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_btn, {\n                color: \"green-darken-1\",\n                variant: \"text\",\n                onClick: $options.connectToVCRoom\n              }, {\n                default: _withCtx(() => [_createTextVNode(\" OK \")]),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"onClick\"])]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]), _createVNode(_component_v_content, null, {\n      default: _withCtx(() => [_createVNode(_component_v_container, null, {\n        default: _withCtx(() => [_createCommentVNode(\" Firebase から取得したリストを描画（トランジション付き）\"), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.chats, chat => {\n          return _openBlock(), _createElementBlock(\"section\", {\n            key: chat.text,\n            class: \"item\"\n          }, [_createVNode(_component_v_row, null, {\n            default: _withCtx(() => [_createVNode(_component_v_col, {\n              cols: \"12\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_ChatItem, {\n                chat: chat\n              }, null, 8 /* PROPS */, [\"chat\"])]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]);\n        }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" リモートメディアエリア \"), _createElementVNode(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */), _createCommentVNode(\" BGM \"), _createElementVNode(\"audio\", {\n          ref: \"audioElement\",\n          src: $data.musicFile\n        }, null, 8 /* PROPS */, _hoisted_5)]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_footer_menu), _createVNode(_component_v_footer, {\n      app: \"\",\n      dark: \"\",\n      class: \"dark\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_row, {\n        justify: \"center\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_col, {\n          cols: \"8\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_text_field, {\n            id: \"commentTextBox\",\n            placeholder: \"\",\n            modelValue: $data.inputtedTxt,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.inputtedTxt = $event),\n            label: \"コメントを入力\",\n            onKeydown: _cache[3] || (_cache[3] = _withKeys($event => $options.onEnterKeyPressedAtChatTextBox($event.keyCode), [\"enter\"]))\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_col, {\n          cols: \"1\"\n        }, {\n          default: _withCtx(() => [_createCommentVNode(\" いいねボタン \"), _createVNode(_component_v_btn, {\n            icon: \"mdi-heart\",\n            onClick: $options.onLikeButtonClick,\n            rounded: \"\",\n            color: \"pink\"\n          }, null, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_col, {\n          cols: \"1\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_MusicPlayerPopover)]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_col, {\n          cols: \"1\"\n        }, {\n          default: _withCtx(() => [_withDirectives(_createVNode(_component_v_btn, {\n            icon: \"mdi-microphone\",\n            onClick: $options.muteMyVC,\n            fab: \"\"\n          }, null, 8 /* PROPS */, [\"onClick\"]), [[_vShow, $data.hasUnMuted]]), _withDirectives(_createVNode(_component_v_btn, {\n            icon: \"mdi-microphone-off\",\n            onClick: $options.unmuteMyVC,\n            fab: \"\",\n            rounded: \"\",\n            color: \"grey\"\n          }, null, 8 /* PROPS */, [\"onClick\"]), [[_vShow, $data.hasMuted]])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })])]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["id","class","ref","_createBlock","_component_v_main","_createElementVNode","_hoisted_1","_hoisted_2","_createCommentVNode","_createVNode","_component_v_row","_component_v_col","cols","_component_v_dialog","$data","dialog","$event","persistent","width","activator","_withCtx","props","_component_v_btn","_mergeProps","rounded","_component_v_icon","_component_v_card","_component_v_card_title","_component_v_card_text","_component_v_card_actions","_component_v_spacer","color","variant","onClick","_cache","$options","connectToVCRoom","_component_v_content","_component_v_container","_hoisted_3","_createElementBlock","_Fragment","_renderList","chats","chat","key","text","_component_ChatItem","_hoisted_4","src","musicFile","_component_footer_menu","_component_v_footer","app","dark","justify","_component_v_text_field","placeholder","inputtedTxt","label","onKeydown","_withKeys","onEnterKeyPressedAtChatTextBox","keyCode","icon","onLikeButtonClick","_component_MusicPlayerPopover","muteMyVC","fab","hasUnMuted","unmuteMyVC","hasMuted"],"sources":["/Users/tsukamotohideki/go/src/github.com/tsubame/Voices/vue/src/views/programs/LiveView.vue"],"sourcesContent":["<template>\n  <v-main>    \n    <div id = \"roomContainer\">\n      <header class=\"roomHeader\">\n        <!--<v-btn v-on:click=\"sendConReqToFB\">リクエスト</v-btn>        -->\n        <v-row>\n          <v-col cols=\"9\">\n          </v-col>   \n          <v-col cols=\"3\" class=\"text-right\">  \n\n            <!-- ダイアログ -->\n            <v-dialog v-model=\"dialog\" persistent width=\"auto\">\n              <template v-slot:activator=\"{ props }\">\n                <v-btn v-bind=\"props\" rounded>\n                  <v-icon>mdi-phone</v-icon>通話に参加\n                </v-btn> \n              </template>\n              <v-card>\n                <v-card-title class=\"text-h5\"></v-card-title>\n                <v-card-text>通話に参加します。よろしいですか？</v-card-text>\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn color=\"green-darken-1\" variant=\"text\" @click=\"dialog = false\">\n                    Cancel\n                  </v-btn>\n                  <v-btn color=\"green-darken-1\" variant=\"text\" @click=\"connectToVCRoom\">\n                    OK\n                  </v-btn>\n                </v-card-actions>\n              </v-card>\n            </v-dialog>\n\n          </v-col>                \n        </v-row>      \n      </header>\n\n      <v-content>\n        <v-container>    \n\n          <!-- Firebase から取得したリストを描画（トランジション付き）-->\n          <div id = \"chatArea\">\n            <section v-for=\"chat in chats\" :key=\"chat.text\" class=\"item\">\n              <v-row>       \n                <v-col cols=\"12\">    \n                  <ChatItem :chat=\"chat\" />\n                </v-col>\n              </v-row>\n            </section>     \n          </div>\n\n          <!-- リモートメディアエリア -->\n          <div ref = \"remoteMediaArea\"></div>\n          <!-- BGM -->\n          <audio ref=\"audioElement\" :src=\"musicFile\"></audio>            \n        </v-container>\n      </v-content>\n\n      <footer-menu />\n      <v-footer app dark class = \"dark\">\n        <v-row justify=\"center\">\n          <v-col cols=\"8\">     \n            <v-text-field id = \"commentTextBox\" placeholder=\"\" v-model=\"inputtedTxt\" label=\"コメントを入力\" @keydown.enter=\"onEnterKeyPressedAtChatTextBox($event.keyCode)\"></v-text-field> \n          </v-col>\n          <v-col cols=\"1\">\n            <!-- いいねボタン -->\n            <v-btn icon=\"mdi-heart\"  v-on:click=\"onLikeButtonClick\" rounded  color=\"pink\"></v-btn>            \n          </v-col>      \n          <v-col cols=\"1\">\n            <MusicPlayerPopover />\n          </v-col>\n          <v-col cols=\"1\">    \n            <v-btn icon=\"mdi-microphone\" v-on:click=\"muteMyVC\" v-show=\"hasUnMuted\" fab></v-btn>              \n            <v-btn icon=\"mdi-microphone-off\" v-on:click=\"unmuteMyVC\" v-show=\"hasMuted\" fab rounded color=\"grey\"></v-btn>    \n          </v-col>                \n        </v-row>             \n      </v-footer>  \n    </div>      \n  </v-main>\n</template>\n\n<!-- Javascript -->\n<script>\nimport { CONSTANTS } from \"../../consts/ConstantVals.js\"\nimport { getDatabase, ref, push } from \"firebase/database\";\n//import { onValue } from \"firebase/database\";\nimport { initAuthAnonymous, initAuthByGoogle, initAuthByTwitter, pushDataToDB, watchTargetKey } from '../../utils/FirebaseManager.js';\nimport { joinToRoom, mute, unmute } from '../../utils/SkywayManager.js';\nimport ChatItem from '../../components/ChatItem.vue'\n//import FooterMenu from '../../components/FooterMenu.vue'\nimport MusicPlayerPopover from '../../components/MusicPlayerPopover.vue';\n//import LivePopoverMenuVue from './LivePopoverMenu.vue';\n\n/**\n * エクスポート\n */\nexport default {\n  data() {\n    return {\n      // ユーザ情報\n      user: {},  \n      // チャットデータ（配列）\n      chats: [],  \n      // チャットデータ（単体）\n      chat: {\n        name: \"\",\n        screenName: \"\",\n        image: \"\",\n        text: \"\"\n      },\n      // アクティブな部屋のメンバー\n      activeRoomMember: {\n        userId: 0,\n        roomId: 0,\n        hasTalkJoined: false,\n        userProfileImage: \"\",\n        isOwner: false,\n      },\n      // 部屋ID\n      roomID: 0,      \n      // セッションID ランダム生成\n      sessionId: 0,\n      // DBキー chats\n      dbKeyChats: '',\n      // DBキー chats\n      dbKeyActiveRoomUsers: '',\n      // DBキー con_reqs\n      dbKeyConReqs: '',      \n      // DBキー con_acks\n      dbKeyConAcks: '',  \n      // 入力したメッセージ\n      inputtedTxt: '',\n      // 部屋のオーナーか\n      isOwner: false,\n      // 接続要求を送信済か\n      hasSendReq: false,\n      // 接続要求承認済か\n      hasReqAcked: false,\n      // 接続要求があったか\n      isExistConReq: false,\n      // ミュート済か\n      hasMuted: false,\n      // ミュート解除中か\n      hasUnMuted: true,\n      // ダイアログ表示状態\n      dialog: false,\n      // BGM用ファイル\n      musicFile: \"\", //require(\"@/assets/bgm_koigokoro.mp3\"),        \n    }\n  },\n  components: {\n    ChatItem,\n    //FooterMenu,\n    MusicPlayerPopover,\n    //LivePopoverMenuVue\n  },\n  setup: function() {\n    console.log(\"setup LiveView\") \n  },\n  mounted: function() {\n    // URLパラメータからRoomIDをセット\n    this.roomID = this.$route.params.roomID\n    // オーナーかをセット\n    //this.isOwner = this.$route.params.isOwner\n    // DBキーをセット\n    this.dbKeyChats = `${CONSTANTS.FB_TABLE_ROOM_CHATS}/${this.roomID}`\n    this.dbKeyActiveRoomUsers = `${CONSTANTS.FB_TABLE_ROOM_CHATS}/${this.roomID}`\n    // セッションIDを乱数でセット\n    this.sessionId = Math.floor(Math.random() * 100000)\n\n    // chatsテーブルの変更を監視\n    watchTargetKey(this.dbKeyChats, (snapshot) => {\n      var dataArray = [];\n      snapshot.forEach(function(childSnapshot) {\n        var childData = childSnapshot.val();\n        dataArray.push(childData);\n      });\n\n      // 配列を逆順にする\n      dataArray.reverse();\n\n      this.chats = dataArray;\n    })\n  },\n  computed: {\n    isBgmPlaying() {\n      return this.$store.getters.getIsBgmPlaying\n    },\n    bgmVolume() {   \n      return this.$store.getters.getBgmVolume\n    },\n  },  \n  methods: {\n    /**\n     * 認証処理実行\n     */\n    execAuth() {\n      // Google認証\n      if (CONSTANTS.USE_GOOGLE_AUTH) {      \n        initAuthByGoogle();\n      // Twitter認証\n      } else if (CONSTANTS.USE_TWITTER_AUTH) {\n        initAuthByTwitter();\n      // 匿名認証\n      } else {\n        initAuthAnonymous(); \n      }\n    },\n    /**\n     * 音声をsubscribe\n     */\n    subscribe() {\n\n    },\n    /**\n     * DBにチャットデータ書き込み\n     */\n    onEnterKeyPressedAtChatTextBox(keyCode) {\n      const ENTER_KEY_CODE = 13\n      // 日本語入力中は終了\n      if (keyCode !== ENTER_KEY_CODE) {\n        return;\n      }\n\n      this.chat = {\n        name: this.$store.getters.getTwitterUser.name,\n        image: this.$store.getters.getTwitterUser.profileImageUrl,\n        text: this.inputtedTxt\n      }\n\n      // データを追加\n      pushDataToDB(this.dbKeyChats, this.chat);\n\n      this.inputtedTxt = \"\"\n    },\n    /**\n     * いいねボタン押下\n     */\n     onLikeButtonClick() {\n      const TEXT = \"がいいねを送りました！\"\n      this.chat = {\n        name: this.$store.getters.getTwitterUser.name,\n        image: this.$store.getters.getTwitterUser.profileImageUrl,\n        text: TEXT\n      }\n\n      // データを追加\n      pushDataToDB(this.dbKeyChats, this.chat);\n    },\n    /**\n     * 接続要求をFireBaseに送る\n     */\n    sendConReqToFB() {\n      if (this.hasSendReq) {\n        return\n      }\n\n      // データを追加\n      push(ref(getDatabase(), this.dbKeyConReqs), {\n        sesId: this.sessionId,\n      });\n\n      this.hasSendReq = true\n    },\n    /**\n     * 接続要求の承認をFireBaseに送る\n     */\n     sendConAckToFB(sesId) {\n      // データを追加\n      push(ref(getDatabase(), this.dbKeyConAcks), {\n        sesId: sesId,\n      });\n\n      this.hasSendReq = true\n    },\n\n    // スクロール位置を一番下に移動\n    scrollBottom() {\n      this.$nextTick(() => {\n        window.scrollTo(0, document.body.clientHeight)\n      })\n    },    \n    // 接続、音声通話参加開始\n    connectToVCRoom() {\n      joinToRoom(this.roomID, this.$refs.remoteMediaArea)\n    },\n    // ミュート\n    async muteMyVC() {\n      this.hasMuted = true;\n      this.hasUnMuted = false;\n      mute();\n    },\n    // アンミュート\n    async unmuteMyVC() {\n      this.hasMuted = false;\n      this.hasUnMuted = true;\n      unmute();\n    }          \n  },\n  watch: {\n    isBgmPlaying(newValue, oldValue) {\n      console.log(`isBgmPlaying: ${oldValue} -> ${newValue}`);\n\n      // 再生\n      if (newValue) {     \n        console.log(this.bgmVolume)        \n        this.$refs.audioElement.play();\n        this.$refs.audioElement.volume = this.bgmVolume;   \n        this.$refs.audioElement.loop = true\n      } else {     \n        this.$refs.audioElement.pause();        \n      }\n    },\n    bgmVolume(newValue, oldValue) {\n      console.log(`volumeChange: ${oldValue} -> ${newValue}`);\n\n      this.$refs.audioElement.volume = this.bgmVolume;        \n    }\n  },\n};\n\n</script>\n\n<!-- CSS-->\n<style>\n\n</style>\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}