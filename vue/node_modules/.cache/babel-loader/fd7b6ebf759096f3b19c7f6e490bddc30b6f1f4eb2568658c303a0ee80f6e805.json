{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, withKeys as _withKeys, vShow as _vShow, withDirectives as _withDirectives, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-d2b2c5ac\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"d-flex justify-space-between\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_RoomPopupMenu = _resolveComponent(\"RoomPopupMenu\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_footer = _resolveComponent(\"v-footer\");\n  return _openBlock(), _createBlock(_component_v_footer, {\n    app: \"\",\n    dark: \"\",\n    class: \"dark\",\n    height: \"64\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"2\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_RoomPopupMenu)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, {\n        cols: \"6\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_text_field, {\n          \"bg-color\": \"grey-lighten-1\",\n          class: \"rounded-pill overflow-hidden\",\n          density: \"compact\",\n          \"hide-details\": \"\",\n          label: \"コメントを入力\",\n          variant: \"solo\",\n          \"prepend-inner-icon\": \"mdi-comment-processing\",\n          modelValue: $data.inputtedTxt,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.inputtedTxt = $event),\n          onKeydown: _cache[1] || (_cache[1] = _withKeys($event => $options.onEnterKeyPressedAtChatTextBox($event.keyCode), [\"enter\"]))\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, {\n        cols: \"4\",\n        class: \"text-right\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_v_btn, {\n          icon: \"mdi-heart\",\n          onClick: $options.onLikeButtonClick,\n          rounded: \"\",\n          style: {\n            \"color\": \"rgb(255, 77, 107)\"\n          }\n        }, null, 8 /* PROPS */, [\"onClick\"]), _withDirectives(_createVNode(_component_v_btn, {\n          icon: \"mdi-microphone\",\n          onClick: $options.onMuteButtonClick\n        }, null, 8 /* PROPS */, [\"onClick\"]), [[_vShow, $props.isPublishing && !$data.isMuting]]), _withDirectives(_createVNode(_component_v_btn, {\n          icon: \"mdi-microphone-off\",\n          color: \"grey\",\n          onClick: $options.onMuteButtonClick\n        }, null, 8 /* PROPS */, [\"onClick\"]), [[_vShow, $props.isPublishing && $data.isMuting]])])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createBlock","_component_v_footer","app","dark","height","_createVNode","_component_v_row","_component_v_col","cols","_component_RoomPopupMenu","_component_v_text_field","density","label","variant","$data","inputtedTxt","$event","onKeydown","_cache","_withKeys","$options","onEnterKeyPressedAtChatTextBox","keyCode","_createElementVNode","_hoisted_1","_component_v_btn","icon","onClick","onLikeButtonClick","rounded","style","onMuteButtonClick","$props","isPublishing","isMuting","color"],"sources":["/Users/tsukamotohideki/go/src/github.com/tsubame/Voices/vue/src/components/Room/RoomFooter.vue"],"sourcesContent":["<template>\n  <v-footer\n    app\n    dark\n    class = \"dark\"\n    height=\"64\"\n  >\n    <v-row>\n      <v-col cols=\"2\">\n        <RoomPopupMenu />\n      </v-col>\n      <v-col cols=\"6\">    \n        <v-text-field\n          bg-color=\"grey-lighten-1\"\n          class=\"rounded-pill overflow-hidden\"\n          density=\"compact\"\n          hide-details\n          label=\"コメントを入力\" \n          variant=\"solo\"\n          prepend-inner-icon=\"mdi-comment-processing\"\n          v-model=\"inputtedTxt\"\n          @keydown.enter=\"onEnterKeyPressedAtChatTextBox($event.keyCode)\"\n        ></v-text-field>\n      </v-col> \n\n      <v-col cols=\"4\" class=\"text-right\">    \n        <div class=\"d-flex justify-space-between\">        \n          <v-btn icon=\"mdi-heart\"  \n            v-on:click=\"onLikeButtonClick\" rounded style=\"color: rgb(255, 77, 107);\">\n          </v-btn>     \n\n          <v-btn icon=\"mdi-microphone\" v-show=\"isPublishing && !isMuting\" @click=\"onMuteButtonClick\"></v-btn>\n          <v-btn icon=\"mdi-microphone-off\" v-show=\"isPublishing && isMuting\" color=\"grey\" @click=\"onMuteButtonClick\"></v-btn>\n        </div>\n      </v-col>   \n    </v-row>\n  </v-footer>  \n</template>\n\n<!--\n//======================================================\n//\n// Script\n//\n//======================================================  \n-->\n<script>\n\n//======================================================\n//\n// RoomFooter.vue 配信画面のフッター\n//  ・コメント入力欄\n//  ・ミュートボタン\n//  ・いいねボタン\n// \n// [索引]\n//   □ 0. mounted\n//\n//   □ 1. watch\n//\n//   □ 2. methods\n//\n//======================================================\n\n// 定数\n//import { CONSTANTS } from \"../../consts/ConstantVals.js\"\n// FireBase\nimport { addChatDataToDB } from \"../../utils/FirebaseManager.js\"\nimport RoomPopupMenu from \"./RoomPopupMenu.vue\"\n\n/**\n * エクスポート\n */\nexport default {\n\n  // props\n  props: [\n    \"targetRoomId\",\n    \"isRoomOwner\",\n    \"isPublishing\",\n  ],\n\n  // components\n  components: {\n    RoomPopupMenu,\n  },\n\n  // data\n  data() {\n    return {\n      // 対象ユーザデータ\n      targetUserData: {\n\n      },\n      // チャットデータ\n      targetChatData: {\n        roomId: 0,\n        userId: 0,\n        userName: \"\",\n        profileImageUrl: \"\",\n        text: \"\",\n        createdAt: null,\n      },         \n      // 入力されたテキスト\n      inputtedTxt: \"\", \n      // ミュート中か\n      isMuting: false,\n    }\n  },\n\n  //======================================================\n  //\n  // 0. mounted\n  //\n  //======================================================\n\n  mounted() {\n    try {      \n      // ユーザデータをセット\n      this.targetUserData = this.$store.getters.getTargetUserData\n    } catch (error) {        \n        console.error(error);      \n    }\n  },\n\n  //======================================================\n  //\n  // 2. methods\n  //\n  //======================================================\n\n  methods: {    \n\n    //======================================================\n    //\n    // 2-1. いいねボタンクリック\n    //\n    //======================================================\n\n    /**\n     * いいねボタンクリック\n     */\n    onLikeButtonClick() {      \n      try {      \n        // データをセット\n        this.targetChatData = {\n          roomId: this.targetRoomId,\n          userId: this.targetUserData.id,\n          userName: this.targetUserData.name,\n          profileImageUrl: this.targetUserData.profileImageUrl,\n          text: this.targetUserData.name + \"がいいね！ を送りました。\",\n          createdAt: new Date(),\n        }\n\n        console.log(\"[チャットデータ登録]\")\n        console.log(this.targetChatData)\n\n        // データ登録\n        addChatDataToDB(this.targetChatData.roomId, this.targetChatData)\n        // テキストを初期化\n        this.inputtedTxt = \"\"\n      } catch (error) {        \n        console.error(error);      \n      }\n    },\n\n    //======================================================\n    //\n    // 2-2. コメント欄でキー押下\n    //\n    //======================================================\n\n    /**\n     * コメント欄でキー押下\n     *  ・エンターキーならDBにデータ追加\n     */\n    onEnterKeyPressedAtChatTextBox(keyCode) {\n      const ENTER_KEY_CODE = 13\n\n      try {      \n        // 日本語入力中は終了\n        if (keyCode !== ENTER_KEY_CODE) {\n          return;\n        } else if(this.inputtedTxt == \"\") {\n          return;\n        }\n\n        // データをセット\n        this.targetChatData = {\n          roomId: this.targetRoomId,\n          userId: this.targetUserData.id,\n          userName: this.targetUserData.name,\n          profileImageUrl: this.targetUserData.profileImageUrl,\n          text: this.inputtedTxt,\n          createdAt: new Date(),\n        }\n\n        console.log(\"[チャットデータ登録]\")\n        console.log(this.targetChatData)\n\n        // データ登録\n        addChatDataToDB(this.targetChatData.roomId, this.targetChatData)\n        // テキストを初期化\n        this.inputtedTxt = \"\"\n      } catch (error) {        \n        console.error(error);      \n      }\n     },\n\n    //======================================================\n    //\n    // 2-3. ミュートボタンクリック\n    //\n    //======================================================\n\n    /**\n     * ミュートボタンクリック\n     */\n    onMuteButtonClick() {\n      try {      \n        if (this.isMuting) {\n          this.isMuting = false\n        } else {\n          this.isMuting = true\n        }\n        // storeにデータをセット\n        this.$store.commit(\"setIsMuting\", this.isMuting)\n      } catch (error) {        \n        console.error(error);      \n      }\n     },\n  }\n}\n</script>\n\n<style scoped>\n\n#smallMenuButton {\n  width: 50px;\n}\n#largeMenuButton {\n  width: 100px;\n  height: 40px;\n}\n\n.fixed-width {\n  width: 200px; /* 好きな幅を指定してください */\n}\n</style>"],"mappings":";;;EA0BaA,KAAK,EAAC;AAA8B;;;;;;;;uBAzB/CC,YAAA,CAmCWC,mBAAA;IAlCTC,GAAG,EAAH,EAAG;IACHC,IAAI,EAAJ,EAAI;IACJJ,KAAK,EAAG,MAAM;IACdK,MAAM,EAAC;;sBAEP,MA4BQ,CA5BRC,YAAA,CA4BQC,gBAAA;wBA3BN,MAEQ,CAFRD,YAAA,CAEQE,gBAAA;QAFDC,IAAI,EAAC;MAAG;0BACb,MAAiB,CAAjBH,YAAA,CAAiBI,wBAAA,E;;UAEnBJ,YAAA,CAYQE,gBAAA;QAZDC,IAAI,EAAC;MAAG;0BACb,MAUgB,CAVhBH,YAAA,CAUgBK,uBAAA;UATd,UAAQ,EAAC,gBAAgB;UACzBX,KAAK,EAAC,8BAA8B;UACpCY,OAAO,EAAC,SAAS;UACjB,cAAY,EAAZ,EAAY;UACZC,KAAK,EAAC,SAAS;UACfC,OAAO,EAAC,MAAM;UACd,oBAAkB,EAAC,wBAAwB;sBAClCC,KAAA,CAAAC,WAAW;qEAAXD,KAAA,CAAAC,WAAW,GAAAC,MAAA;UACnBC,SAAO,EAAAC,MAAA,QAAAA,MAAA,MAAAC,SAAA,CAAAH,MAAA,IAAQI,QAAA,CAAAC,8BAA8B,CAACL,MAAM,CAACM,OAAO;;;UAIjEjB,YAAA,CASQE,gBAAA;QATDC,IAAI,EAAC,GAAG;QAACT,KAAK,EAAC;;0BACpB,MAOM,CAPNwB,mBAAA,CAOM,OAPNC,UAOM,GANJnB,YAAA,CAEQoB,gBAAA;UAFDC,IAAI,EAAC,WAAW;UAChBC,OAAK,EAAEP,QAAA,CAAAQ,iBAAiB;UAAEC,OAAO,EAAP,EAAO;UAACC,KAAiC,EAAjC;YAAA;UAAA;8DAGzCzB,YAAA,CAAmGoB,gBAAA;UAA5FC,IAAI,EAAC,gBAAgB;UAAqCC,OAAK,EAAEP,QAAA,CAAAW;wDAAnCC,MAAA,CAAAC,YAAY,KAAKnB,KAAA,CAAAoB,QAAQ,E,mBAC9D7B,YAAA,CAAmHoB,gBAAA;UAA5GC,IAAI,EAAC,oBAAoB;UAAmCS,KAAK,EAAC,MAAM;UAAER,OAAK,EAAEP,QAAA,CAAAW;wDAA/CC,MAAA,CAAAC,YAAY,IAAInB,KAAA,CAAAoB,QAAQ,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}