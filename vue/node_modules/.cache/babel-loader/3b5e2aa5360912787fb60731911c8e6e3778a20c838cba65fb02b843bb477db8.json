{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppLeftMenuUserArea = _resolveComponent(\"AppLeftMenuUserArea\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_AppLeftMenuItems = _resolveComponent(\"AppLeftMenuItems\");\n  const _component_v_navigation_drawer = _resolveComponent(\"v-navigation-drawer\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  const _component_AppModalLoginDialog = _resolveComponent(\"AppModalLoginDialog\");\n  const _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createBlock(_component_v_app, {\n    id: \"inspire\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_navigation_drawer, {\n      modelValue: _ctx.drawer,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.drawer = $event)\n    }, {\n      default: _withCtx(() => [_createVNode(_component_AppLeftMenuUserArea), _createVNode(_component_v_divider), _createVNode(_component_AppLeftMenuItems)]),\n      _: 1\n    }, 8, [\"modelValue\"]), _createVNode(_component_router_view), _createVNode(_component_AppModalLoginDialog, {\n      showDialog: _ctx.showLoginDialog\n    }, null, 8, [\"showDialog\"])]),\n    _: 1\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_app","id","_createVNode","_component_v_navigation_drawer","_ctx","drawer","$event","_component_AppLeftMenuUserArea","_component_v_divider","_component_AppLeftMenuItems","_component_router_view","_component_AppModalLoginDialog","showDialog","showLoginDialog"],"sources":["/Users/tsukamotohideki/go/src/github.com/tsubame/Voices/vue/src/App.vue"],"sourcesContent":["<template>\n  <v-app id=\"inspire\">\n    <!-- システムバー -->\n    <!--\n    <v-system-bar>      \n      <v-spacer></v-spacer>\n    -->\n      <!--\n      <v-icon>mdi-square</v-icon>\n      <v-icon>mdi-circle</v-icon>\n      <v-icon>mdi-triangle</v-icon>\n      --> \n    <!--\n    </v-system-bar>\n    -->\n     \n    <v-navigation-drawer v-model=\"drawer\">\n\n      <AppLeftMenuUserArea />\n      <!--\n      <v-sheet\n        color=\"grey-lighten-4\"\n        class=\"pa-4\"\n      >\n        <v-avatar\n          class=\"mb-4\"\n          color=\"grey-darken-1\"\n          size=\"64\"\n        ></v-avatar>\n\n        <div>john@google.com</div>\n      </v-sheet>\n      -->\n\n      <v-divider></v-divider>\n\n      <!-- 横メニューアイテム -->\n      <AppLeftMenuItems />\n    </v-navigation-drawer>\n\n    <!-- router view -->    \n    <router-view />   \n\n    <!-- モーダルダイアログ -->\n    <AppModalLoginDialog :showDialog=\"showLoginDialog\" />\n  </v-app>\n</template>\n\n<!-- \n//======================================================\n//\n// Script\n//\n//======================================================\n-->\n\n<script>\nimport AppModalLoginDialog from './components/App/AppModalLoginDialog.vue';\nimport AppLeftMenuItems from './components/App/AppLeftMenuItems.vue';\nimport AppLeftMenuUserArea from './components/App/AppLeftMenuUserArea.vue';\n//import AppFooterMenu from './components/App/AppFooterMenu.vue';\n//import { CONSTANTS } from './consts/ConstantVals';\n\n//======================================================\n//\n// App.vue JavaScript\n// \n// [索引]\n//   □ 0-1. created\n//    ・未ログインならログイン用ダイアログを表示\n//\n//======================================================\n\nexport default {   \n\n  // コンポーネント \n  components: {\n    AppModalLoginDialog,\n    AppLeftMenuItems,\n    //AppFooterMenu,\n    AppLeftMenuUserArea,\n  },\n\n  // data\n  data: () => ({\n    drawer: null,\n    isMobile: false,\n    showMenu: false,\n\n    showLoginDialog: false,  \n  }),\n  \n  //======================================================\n  //\n  // 0-1. created\n  //\n  //======================================================\n\n  /**\n   * created\n   *  ・未ログインならログイン用ダイアログを表示\n   */\n  created() {\n    // 未ログインならログイン用ダイアログを表示\n    try {\n      if (!this.$store.getters.getHasLogined) {\n        console.log(\"未ログインのためログイン用ダイアログを表示\")\n        this.showLoginDialog = true\n      }\n    } catch (error) {        \n      console.error(error);      \n    }\n  },\n\n  //======================================================\n  //\n  // 0-2. mounted\n  //\n  //======================================================\n\n  /**\n   * mounted\n   */\n  mounted() {\n\n  },\n\n  //======================================================\n  //\n  // 1. methods\n  //\n  //======================================================  \n\n  /**\n   * methods\n   */\n  methods: {\n\n\n  },\n\n}\n</script>\n\n<!-- \n//======================================================\n//\n// CSS\n//\n//======================================================\n-->\n<style>\n/* body */\nbody {\n\n}\n/* 見出し */\nh2 {\n  margin: 80px 0 40px;\n  font-size: 110%;\n\n  border-left: 2px solid #74B9C3;\n  border-bottom: 2px solid #DBEAE5;\n  font-family: 'Hiragino Sans', Meiryo, sans-serif;\n  font-weight: 200;\n  line-height: 1.5;\n  padding: 0 0 0px 12px;\n}\n\n/* 見出し */\nh4 {\n  border-left: 0px solid #74B9C3;\n  border-bottom: 2px solid #DBEAE5;\n  font-family: 'Hiragino Sans', Meiryo, sans-serif;\n  font-weight: 200;\n  line-height: 1.5;\n  padding: 0 0 0px 8px;\n}\nh6 {\n  border-left: 2px solid #74B9C3;\n  font-family: 'Hiragino Sans', Meiryo, sans-serif;\n  font-weight: 200;\n  line-height: 1.5;\n  padding: 0 0 0px 8px;\n}\n</style>"],"mappings":";;;;;;;;;uBACEA,YAAA,CA4CQC,gBAAA;IA5CDC,EAAE,EAAC;EAAS;sBAejB,MAsBsB,CAtBtBC,YAAA,CAsBsBC,8BAAA;kBAtBQC,IAAA,CAAAC,MAAM;iEAAND,IAAA,CAAAC,MAAM,GAAAC,MAAA;;wBAElC,MAAuB,CAAvBJ,YAAA,CAAuBK,8BAAA,GAgBvBL,YAAA,CAAuBM,oBAAA,GAGvBN,YAAA,CAAoBO,2BAAA,E;;2BAItBP,YAAA,CAAeQ,sBAAA,GAGfR,YAAA,CAAqDS,8BAAA;MAA/BC,UAAU,EAAER,IAAA,CAAAS;IAAe,4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}